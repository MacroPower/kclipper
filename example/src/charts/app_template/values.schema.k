"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

schema Values:
    r"""
    Values

    Attributes
    ----------
    configMaps : any, optional
    controllers : any, optional
    defaultPodOptions : ValuesDefaultPodOptions, optional
    enforceServiceAccountCreation : bool, optional
    global : ValuesGlobal, optional
    ingress : any, optional
    networkpolicies : any, optional
    persistence : any, optional
    rawResources : any, optional
    route : any, optional
    secrets : any, optional
    service : any, optional
    serviceAccount : ValuesServiceAccount, optional
    serviceMonitor : any, optional
    """

    configMaps?: any
    controllers?: any
    defaultPodOptions?: ValuesDefaultPodOptions
    enforceServiceAccountCreation?: bool
    global?: ValuesGlobal
    ingress?: any
    networkpolicies?: any
    persistence?: any
    rawResources?: any
    route?: any
    secrets?: any
    service?: any
    serviceAccount?: ValuesServiceAccount
    serviceMonitor?: any

schema ValuesConfigMapsAdditionalProperties:
    r"""
    ValuesConfigMapsAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    binaryData : ValuesConfigMapsAdditionalPropertiesBinaryData, optional
    data : ValuesConfigMapsAdditionalPropertiesData, optional
    enabled : bool, optional, default is True
    includeInChecksum : bool, optional, default is True
    labels : any, optional
    nameOverride : str, optional
    """

    annotations?: any
    binaryData?: ValuesConfigMapsAdditionalPropertiesBinaryData
    data?: ValuesConfigMapsAdditionalPropertiesData
    enabled?: bool
    includeInChecksum?: bool
    labels?: any
    nameOverride?: str

schema ValuesConfigMapsAdditionalPropertiesBinaryData:
    r"""
    ValuesConfigMapsAdditionalPropertiesBinaryData
    """

    [...str]: str

schema ValuesConfigMapsAdditionalPropertiesData:
    r"""
    ValuesConfigMapsAdditionalPropertiesData
    """

    [...str]: str

schema ValuesControllersAdditionalProperties:
    r"""
    ValuesControllersAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    applyDefaultContainerOptionsToInitContainers : bool, optional, default is True
    containers : ValuesControllersAdditionalPropertiesContainers, optional
    cronjob : any, optional
    defaultContainerOptions : ValuesControllersAdditionalPropertiesDefaultContainerOptions, optional
    defaultContainerOptionsStrategy : "overwrite" | "merge", optional, default is "overwrite"
    enabled : bool, optional, default is True
    initContainers : ValuesControllersAdditionalPropertiesInitContainers, optional
    job : any, optional
    labels : any, optional
    nameOverride : str, optional
    pod : ValuesControllersAdditionalPropertiesPod, optional
    replicas : int, optional, default is 1
    revisionHistoryLimit : int, optional
    rollingUpdate : ValuesControllersAdditionalPropertiesRollingUpdate, optional
    serviceAccount : ValuesControllersAdditionalPropertiesServiceAccount, optional
    statefulset : any, optional
    strategy : str, optional
    $type : "deployment" | "statefulset" | "daemonset" | "cronjob" | "job", optional
    """

    annotations?: any
    applyDefaultContainerOptionsToInitContainers?: bool
    containers?: ValuesControllersAdditionalPropertiesContainers
    cronjob?: any
    defaultContainerOptions?: ValuesControllersAdditionalPropertiesDefaultContainerOptions
    defaultContainerOptionsStrategy?: "overwrite" | "merge"
    enabled?: bool
    initContainers?: ValuesControllersAdditionalPropertiesInitContainers
    job?: any
    labels?: any
    nameOverride?: str
    pod?: ValuesControllersAdditionalPropertiesPod
    replicas?: int
    revisionHistoryLimit?: int
    rollingUpdate?: ValuesControllersAdditionalPropertiesRollingUpdate
    serviceAccount?: ValuesControllersAdditionalPropertiesServiceAccount
    statefulset?: any
    strategy?: str
    $type?: "deployment" | "statefulset" | "daemonset" | "cronjob" | "job"

schema ValuesControllersAdditionalPropertiesContainers:
    r"""
    ValuesControllersAdditionalPropertiesContainers
    """

    [...str]: ValuesControllersAdditionalPropertiesContainersAdditionalProperties

schema ValuesControllersAdditionalPropertiesContainersAdditionalProperties:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalProperties

    Attributes
    ----------
    args : any, optional
    command : any, optional
    dependsOn : str | str, optional
    enabled : bool, optional, default is True
    env : any, optional
    envFrom : any, optional
    image : any, optional
    lifecycle : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecycle, optional
        Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
    nameOverride : str, optional
    ports : [ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesPortsItems0], optional
    probes : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbes, optional
    resources : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResources, optional
        ResourceRequirements describes the compute resource requirements.
    restartPolicy : str, optional
    securityContext : any, optional
    stdin : bool, optional, default is False
    terminationMessagePath : str, optional
    terminationMessagePolicy : "File" | "FallbackToLogsOnError", optional
    tty : bool, optional, default is False
    workingDir : str, optional
    """

    args?: any
    command?: any
    dependsOn?: str | str
    enabled?: bool
    env?: any
    envFrom?: any
    image?: any
    lifecycle?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecycle
    nameOverride?: str
    ports?: [ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesPortsItems0]
    probes?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbes
    resources?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResources
    restartPolicy?: str
    securityContext?: any
    stdin?: bool
    terminationMessagePath?: str
    terminationMessagePolicy?: "File" | "FallbackToLogsOnError"
    tty?: bool
    workingDir?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecycle:
    r"""
    Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.

    Attributes
    ----------
    postStart : any, optional
        PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    preStop : any, optional
        PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    """

    postStart?: any
    preStop?: any

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesPortsItems0:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesPortsItems0

    Attributes
    ----------
    containerPort : int, optional
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, optional
        What host IP to bind the external port to.
    hostPort : int, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """

    containerPort?: int
    hostIP?: str
    hostPort?: int
    name?: str
    $protocol?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbes:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbes

    Attributes
    ----------
    liveness : any, optional
    readiness : any, optional
    startup : any, optional
    """

    liveness?: any
    readiness?: any
    startup?: any

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResources:
    r"""
    ResourceRequirements describes the compute resource requirements.

    Attributes
    ----------
    claims : [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResourcesClaimsItems0, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.

        This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : any, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : any, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """

    claims?: [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResourcesClaimsItems0
    limits?: any
    requests?: any

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResourcesClaimsItems0:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResourcesClaimsItems0

    Attributes
    ----------
    name : str, optional
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """

    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptions:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptions

    Attributes
    ----------
    args : str | str, optional
    command : str | str, optional
    env : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0 | ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnv, optional
    envFrom : [ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0], optional
    image : ValuesControllersAdditionalPropertiesDefaultContainerOptionsImage, optional
    resources : ValuesControllersAdditionalPropertiesDefaultContainerOptionsResources, optional
        ResourceRequirements describes the compute resource requirements.
    securityContext : any, optional
    """

    args?: str | str
    command?: str | str
    env?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0 | ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnv
    envFrom?: [ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0]
    image?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsImage
    resources?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsResources
    securityContext?: any

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnv:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnv
    """

    [...str]: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalProperties

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalProperties:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalProperties

    Attributes
    ----------
    dependsOn : any, optional
    value : any, optional
    """

    dependsOn?: any
    value?: any

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0

    Attributes
    ----------
    configMap : str, optional
    configMapRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0ConfigMapRef, optional
    prefix : str, optional
    secret : str, optional
    secretRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0SecretRef, optional
    """

    configMap?: str
    configMapRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0ConfigMapRef
    prefix?: str
    secret?: str
    secretRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0SecretRef

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0ConfigMapRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0ConfigMapRef

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    optional : bool, optional
    """

    identifier?: str
    name?: str
    optional?: bool

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0SecretRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0SecretRef

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    optional : bool, optional
    """

    identifier?: str
    name?: str
    optional?: bool

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0

    Attributes
    ----------
    name : str, optional
    value : any, optional
    """

    name?: str
    value?: any

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsImage:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsImage

    Attributes
    ----------
    pullPolicy : "Always" | "IfNotPresent", optional
    repository : str, optional
    tag : str | float, optional
    """

    pullPolicy?: "Always" | "IfNotPresent"
    repository?: str
    tag?: str | float

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsResources:
    r"""
    ResourceRequirements describes the compute resource requirements.

    Attributes
    ----------
    claims : [any] | ValuesControllersAdditionalPropertiesDefaultContainerOptionsResourcesClaimsItems0, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.

        This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : any, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : any, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """

    claims?: [any] | ValuesControllersAdditionalPropertiesDefaultContainerOptionsResourcesClaimsItems0
    limits?: any
    requests?: any

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsResourcesClaimsItems0:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsResourcesClaimsItems0

    Attributes
    ----------
    name : str, optional
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """

    name?: str

schema ValuesControllersAdditionalPropertiesInitContainers:
    r"""
    ValuesControllersAdditionalPropertiesInitContainers
    """

    [...str]: ValuesControllersAdditionalPropertiesInitContainersAdditionalProperties

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalProperties:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalProperties

    Attributes
    ----------
    args : any, optional
    command : any, optional
    dependsOn : str | str, optional
    enabled : bool, optional, default is True
    env : any, optional
    envFrom : any, optional
    image : any, optional
    lifecycle : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecycle, optional
        Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
    nameOverride : str, optional
    ports : [ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesPortsItems0], optional
    probes : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbes, optional
    resources : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResources, optional
        ResourceRequirements describes the compute resource requirements.
    restartPolicy : str, optional
    securityContext : any, optional
    stdin : bool, optional, default is False
    terminationMessagePath : str, optional
    terminationMessagePolicy : "File" | "FallbackToLogsOnError", optional
    tty : bool, optional, default is False
    workingDir : str, optional
    """

    args?: any
    command?: any
    dependsOn?: str | str
    enabled?: bool
    env?: any
    envFrom?: any
    image?: any
    lifecycle?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecycle
    nameOverride?: str
    ports?: [ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesPortsItems0]
    probes?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbes
    resources?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResources
    restartPolicy?: str
    securityContext?: any
    stdin?: bool
    terminationMessagePath?: str
    terminationMessagePolicy?: "File" | "FallbackToLogsOnError"
    tty?: bool
    workingDir?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecycle:
    r"""
    Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.

    Attributes
    ----------
    postStart : any, optional
        PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    preStop : any, optional
        PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    """

    postStart?: any
    preStop?: any

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesPortsItems0:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesPortsItems0

    Attributes
    ----------
    containerPort : int, optional
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, optional
        What host IP to bind the external port to.
    hostPort : int, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """

    containerPort?: int
    hostIP?: str
    hostPort?: int
    name?: str
    $protocol?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbes:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbes

    Attributes
    ----------
    liveness : any, optional
    readiness : any, optional
    startup : any, optional
    """

    liveness?: any
    readiness?: any
    startup?: any

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResources:
    r"""
    ResourceRequirements describes the compute resource requirements.

    Attributes
    ----------
    claims : [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResourcesClaimsItems0, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.

        This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : any, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : any, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """

    claims?: [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResourcesClaimsItems0
    limits?: any
    requests?: any

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResourcesClaimsItems0:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResourcesClaimsItems0

    Attributes
    ----------
    name : str, optional
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """

    name?: str

schema ValuesControllersAdditionalPropertiesPod:
    r"""
    ValuesControllersAdditionalPropertiesPod

    Attributes
    ----------
    affinity : ValuesControllersAdditionalPropertiesPodAffinity, optional
        Affinity is a group of affinity scheduling rules.
    annotations : any, optional
    automountServiceAccountToken : bool, optional, default is True
    dnsConfig : ValuesControllersAdditionalPropertiesPodDnsConfig, optional
        PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
    dnsPolicy : str, optional
    enableServiceLinks : bool, optional, default is False
    hostAliases : [ValuesControllersAdditionalPropertiesPodHostAliasesItems0], optional
    hostIPC : bool, optional, default is False
    hostNetwork : bool, optional, default is "false"
    hostPID : bool, optional, default is False
    hostUsers : bool, optional, default is False
    hostname : str, optional
    imagePullSecrets : [ValuesControllersAdditionalPropertiesPodImagePullSecretsItems0], optional
    labels : any, optional
    nodeSelector : ValuesControllersAdditionalPropertiesPodNodeSelector, optional
    priorityClassName : str, optional
    restartPolicy : str, optional
    runtimeClassName : str, optional
    schedulerName : str, optional
    securityContext : ValuesControllersAdditionalPropertiesPodSecurityContext, optional
        PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
    terminationGracePeriodSeconds : int, optional
    tolerations : [ValuesControllersAdditionalPropertiesPodTolerationsItems0], optional
    topologySpreadConstraints : [ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0], optional
    """

    affinity?: ValuesControllersAdditionalPropertiesPodAffinity
    annotations?: any
    automountServiceAccountToken?: bool
    dnsConfig?: ValuesControllersAdditionalPropertiesPodDnsConfig
    dnsPolicy?: str
    enableServiceLinks?: bool
    hostAliases?: [ValuesControllersAdditionalPropertiesPodHostAliasesItems0]
    hostIPC?: bool
    hostNetwork?: bool
    hostPID?: bool
    hostUsers?: bool
    hostname?: str
    imagePullSecrets?: [ValuesControllersAdditionalPropertiesPodImagePullSecretsItems0]
    labels?: any
    nodeSelector?: ValuesControllersAdditionalPropertiesPodNodeSelector
    priorityClassName?: str
    restartPolicy?: str
    runtimeClassName?: str
    schedulerName?: str
    securityContext?: ValuesControllersAdditionalPropertiesPodSecurityContext
    terminationGracePeriodSeconds?: int
    tolerations?: [ValuesControllersAdditionalPropertiesPodTolerationsItems0]
    topologySpreadConstraints?: [ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0]

schema ValuesControllersAdditionalPropertiesPodAffinity:
    r"""
    Affinity is a group of affinity scheduling rules.

    Attributes
    ----------
    nodeAffinity : any, optional
        Describes node affinity scheduling rules for the pod.
    podAffinity : any, optional
        Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
    podAntiAffinity : any, optional
        Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
    """

    nodeAffinity?: any
    podAffinity?: any
    podAntiAffinity?: any

schema ValuesControllersAdditionalPropertiesPodDnsConfig:
    r"""
    PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.

    Attributes
    ----------
    nameservers : [str], optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [any], optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """

    nameservers?: [str]
    options?: [any]
    searches?: [str]

schema ValuesControllersAdditionalPropertiesPodHostAliasesItems0:
    r"""
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.

    Attributes
    ----------
    hostnames : [str], optional
        Hostnames for the above IP address.
    ip : str, optional
        IP address of the host file entry.
    """

    hostnames?: [str]
    ip?: str

schema ValuesControllersAdditionalPropertiesPodImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """

    name?: str

schema ValuesControllersAdditionalPropertiesPodNodeSelector:
    r"""
    ValuesControllersAdditionalPropertiesPodNodeSelector
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodSecurityContext:
    r"""
    PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.

    Attributes
    ----------
    fsGroup : int, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

        1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

        If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
    fsGroupChangePolicy : str, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : any, optional
        The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seccompProfile : any, optional
        The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.
    supplementalGroups : [int], optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.
    sysctls : [any], optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
    """

    fsGroup?: int
    fsGroupChangePolicy?: str
    runAsGroup?: int
    runAsNonRoot?: bool
    runAsUser?: int
    seLinuxOptions?: any
    seccompProfile?: any
    supplementalGroups?: [int]
    sysctls?: [any]

schema ValuesControllersAdditionalPropertiesPodTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """

    effect?: str
    key?: str
    operator?: str
    tolerationSeconds?: int
    value?: str

schema ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0:
    r"""
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : any, optional
        LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.

        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, optional
        MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, optional
        MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.

        This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
    nodeAffinityPolicy : str, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

        If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    nodeTaintsPolicy : str, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.

        If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    topologyKey : str, optional
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology. And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology. It's a required field.
    whenUnsatisfiable : str, optional
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,
          but giving higher precedence to topologies that would help reduce the
          skew.
        A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """

    labelSelector?: any
    matchLabelKeys?: [str]
    maxSkew?: int
    minDomains?: int
    nodeAffinityPolicy?: str
    nodeTaintsPolicy?: str
    topologyKey?: str
    whenUnsatisfiable?: str

schema ValuesControllersAdditionalPropertiesRollingUpdate:
    r"""
    ValuesControllersAdditionalPropertiesRollingUpdate
    """

    [...str]: any

schema ValuesControllersAdditionalPropertiesServiceAccount:
    r"""
    ValuesControllersAdditionalPropertiesServiceAccount

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    """

    identifier?: str
    name?: str

schema ValuesDefaultPodOptions:
    r"""
    ValuesDefaultPodOptions

    Attributes
    ----------
    affinity : ValuesDefaultPodOptionsAffinity, optional
        Affinity is a group of affinity scheduling rules.
    annotations : any, optional
    automountServiceAccountToken : bool, optional, default is True
    dnsConfig : ValuesDefaultPodOptionsDnsConfig, optional
        PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
    dnsPolicy : str, optional
    enableServiceLinks : bool, optional, default is False
    hostAliases : [ValuesDefaultPodOptionsHostAliasesItems0], optional
    hostIPC : bool, optional, default is False
    hostNetwork : bool, optional, default is "false"
    hostPID : bool, optional, default is False
    hostUsers : bool, optional, default is False
    hostname : str, optional
    imagePullSecrets : [ValuesDefaultPodOptionsImagePullSecretsItems0], optional
    labels : any, optional
    nodeSelector : ValuesDefaultPodOptionsNodeSelector, optional
    priorityClassName : str, optional
    restartPolicy : str, optional
    runtimeClassName : str, optional
    schedulerName : str, optional
    securityContext : ValuesDefaultPodOptionsSecurityContext, optional
        PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
    terminationGracePeriodSeconds : int, optional
    tolerations : [ValuesDefaultPodOptionsTolerationsItems0], optional
    topologySpreadConstraints : [ValuesDefaultPodOptionsTopologySpreadConstraintsItems0], optional
    """

    affinity?: ValuesDefaultPodOptionsAffinity
    annotations?: any
    automountServiceAccountToken?: bool
    dnsConfig?: ValuesDefaultPodOptionsDnsConfig
    dnsPolicy?: str
    enableServiceLinks?: bool
    hostAliases?: [ValuesDefaultPodOptionsHostAliasesItems0]
    hostIPC?: bool
    hostNetwork?: bool
    hostPID?: bool
    hostUsers?: bool
    hostname?: str
    imagePullSecrets?: [ValuesDefaultPodOptionsImagePullSecretsItems0]
    labels?: any
    nodeSelector?: ValuesDefaultPodOptionsNodeSelector
    priorityClassName?: str
    restartPolicy?: str
    runtimeClassName?: str
    schedulerName?: str
    securityContext?: ValuesDefaultPodOptionsSecurityContext
    terminationGracePeriodSeconds?: int
    tolerations?: [ValuesDefaultPodOptionsTolerationsItems0]
    topologySpreadConstraints?: [ValuesDefaultPodOptionsTopologySpreadConstraintsItems0]

schema ValuesDefaultPodOptionsAffinity:
    r"""
    Affinity is a group of affinity scheduling rules.

    Attributes
    ----------
    nodeAffinity : any, optional
        Describes node affinity scheduling rules for the pod.
    podAffinity : any, optional
        Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
    podAntiAffinity : any, optional
        Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
    """

    nodeAffinity?: any
    podAffinity?: any
    podAntiAffinity?: any

schema ValuesDefaultPodOptionsDnsConfig:
    r"""
    PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.

    Attributes
    ----------
    nameservers : [str], optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [any], optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """

    nameservers?: [str]
    options?: [any]
    searches?: [str]

schema ValuesDefaultPodOptionsHostAliasesItems0:
    r"""
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.

    Attributes
    ----------
    hostnames : [str], optional
        Hostnames for the above IP address.
    ip : str, optional
        IP address of the host file entry.
    """

    hostnames?: [str]
    ip?: str

schema ValuesDefaultPodOptionsImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """

    name?: str

schema ValuesDefaultPodOptionsNodeSelector:
    r"""
    ValuesDefaultPodOptionsNodeSelector
    """

    [...str]: str

schema ValuesDefaultPodOptionsSecurityContext:
    r"""
    PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.

    Attributes
    ----------
    fsGroup : int, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

        1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

        If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
    fsGroupChangePolicy : str, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : any, optional
        The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seccompProfile : any, optional
        The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.
    supplementalGroups : [int], optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.
    sysctls : [any], optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
    """

    fsGroup?: int
    fsGroupChangePolicy?: str
    runAsGroup?: int
    runAsNonRoot?: bool
    runAsUser?: int
    seLinuxOptions?: any
    seccompProfile?: any
    supplementalGroups?: [int]
    sysctls?: [any]

schema ValuesDefaultPodOptionsTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """

    effect?: str
    key?: str
    operator?: str
    tolerationSeconds?: int
    value?: str

schema ValuesDefaultPodOptionsTopologySpreadConstraintsItems0:
    r"""
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : any, optional
        LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.

        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, optional
        MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, optional
        MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.

        This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
    nodeAffinityPolicy : str, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

        If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    nodeTaintsPolicy : str, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.

        If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    topologyKey : str, optional
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology. And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology. It's a required field.
    whenUnsatisfiable : str, optional
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,
          but giving higher precedence to topologies that would help reduce the
          skew.
        A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """

    labelSelector?: any
    matchLabelKeys?: [str]
    maxSkew?: int
    minDomains?: int
    nodeAffinityPolicy?: str
    nodeTaintsPolicy?: str
    topologyKey?: str
    whenUnsatisfiable?: str

schema ValuesGlobal:
    r"""
    ValuesGlobal

    Attributes
    ----------
    annotations : any, optional
    fullnameOverride : str, optional
    labels : any, optional
    nameOverride : str, optional
    propagateGlobalMetadataToPods : bool, optional, default is False
    """

    annotations?: any
    fullnameOverride?: str
    labels?: any
    nameOverride?: str
    propagateGlobalMetadataToPods?: bool

schema ValuesIngressAdditionalProperties:
    r"""
    ValuesIngressAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    className : str, optional
    defaultBackend : str, optional
    enabled : bool, optional, default is True
    hosts : [any], optional
    labels : any, optional
    nameOverride : str, optional
    tls : [any], optional
    """

    annotations?: any
    className?: str
    defaultBackend?: str
    enabled?: bool
    hosts?: [any]
    labels?: any
    nameOverride?: str
    tls?: [any]

schema ValuesNetworkpoliciesAdditionalProperties:
    r"""
    ValuesNetworkpoliciesAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    controller : str, optional
    enabled : bool, optional, default is True
    labels : any, optional
    nameOverride : str, optional
    podSelector : any, optional
    policyTypes : [str], optional
    rules : ValuesNetworkpoliciesAdditionalPropertiesRules, optional
    """

    annotations?: any
    controller?: str
    enabled?: bool
    labels?: any
    nameOverride?: str
    podSelector?: any
    policyTypes?: [str]
    rules?: ValuesNetworkpoliciesAdditionalPropertiesRules

schema ValuesNetworkpoliciesAdditionalPropertiesRules:
    r"""
    ValuesNetworkpoliciesAdditionalPropertiesRules

    Attributes
    ----------
    egress : [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0], optional
    ingress : [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0], optional
    """

    egress?: [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0]
    ingress?: [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0:
    r"""
    NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8

    Attributes
    ----------
    ports : [any], optional
        ports is a list of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
    to : [any], optional
        to is a list of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
    """

    ports?: [any]
    to?: [any]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0:
    r"""
    NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.

    Attributes
    ----------
    from : [any], optional
        from is a list of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
    ports : [any], optional
        ports is a list of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
    """

    from?: [any]
    ports?: [any]

schema ValuesRawResourcesAdditionalProperties:
    r"""
    ValuesRawResourcesAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    apiVersion : str, optional
    enabled : bool, optional, default is True
    kind : str, optional
    labels : any, optional
    nameOverride : str, optional
    spec : any, optional
    """

    annotations?: any
    apiVersion?: str
    enabled?: bool
    kind?: str
    labels?: any
    nameOverride?: str
    spec?: any

schema ValuesRouteAdditionalProperties:
    r"""
    ValuesRouteAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    enabled : bool, optional, default is True
    hostnames : [str], optional
    kind : "GRPCRoute" | "HTTPRoute" | "TCPRoute" | "TLSRoute" | "UDPRoute", optional
    labels : any, optional
    nameOverride : str, optional
    parentRefs : [ValuesRouteAdditionalPropertiesParentRefsItems0], optional
    rules : [ValuesRouteAdditionalPropertiesRulesItems0], optional
    """

    annotations?: any
    enabled?: bool
    hostnames?: [str]
    kind?: "GRPCRoute" | "HTTPRoute" | "TCPRoute" | "TLSRoute" | "UDPRoute"
    labels?: any
    nameOverride?: str
    parentRefs?: [ValuesRouteAdditionalPropertiesParentRefsItems0]
    rules?: [ValuesRouteAdditionalPropertiesRulesItems0]

schema ValuesRouteAdditionalPropertiesParentRefsItems0:
    r"""
    ValuesRouteAdditionalPropertiesParentRefsItems0

    Attributes
    ----------
    group : str, optional
    kind : str, optional
    name : str, optional
    namespace : str, optional
    sectionName : str, optional
    """

    group?: str
    kind?: str
    name?: str
    namespace?: str
    sectionName?: str

schema ValuesRouteAdditionalPropertiesRulesItems0:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0

    Attributes
    ----------
    backendRefs : [ValuesRouteAdditionalPropertiesRulesItems0BackendRefsItems0], optional
    filters : [any], optional
    matches : [ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0], optional
    timeouts : ValuesRouteAdditionalPropertiesRulesItems0Timeouts, optional
    """

    backendRefs?: [ValuesRouteAdditionalPropertiesRulesItems0BackendRefsItems0]
    filters?: [any]
    matches?: [ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0]
    timeouts?: ValuesRouteAdditionalPropertiesRulesItems0Timeouts

schema ValuesRouteAdditionalPropertiesRulesItems0BackendRefsItems0:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0BackendRefsItems0

    Attributes
    ----------
    group : str, optional
    kind : str, optional
    name : str, optional
    namespace : str, optional
    port : str | int, optional
    weight : int, optional
    """

    group?: str
    kind?: str
    name?: str
    namespace?: str
    port?: str | int
    weight?: int

schema ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0

    Attributes
    ----------
    path : ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0Path, optional
    """

    path?: ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0Path

schema ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0Path:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0Path

    Attributes
    ----------
    $type : str, optional
    value : str, optional
    """

    $type?: str
    value?: str

schema ValuesRouteAdditionalPropertiesRulesItems0Timeouts:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0Timeouts
    """

    [...str]: any

schema ValuesSecretsAdditionalProperties:
    r"""
    ValuesSecretsAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    enabled : bool, optional, default is True
    includeInChecksum : bool, optional, default is True
    labels : any, optional
    nameOverride : str, optional
    stringData : ValuesSecretsAdditionalPropertiesStringData, optional
    $type : str, optional
    """

    annotations?: any
    enabled?: bool
    includeInChecksum?: bool
    labels?: any
    nameOverride?: str
    stringData?: ValuesSecretsAdditionalPropertiesStringData
    $type?: str

schema ValuesSecretsAdditionalPropertiesStringData:
    r"""
    ValuesSecretsAdditionalPropertiesStringData
    """

    [...str]: str

schema ValuesServiceAccount:
    r"""
    ValuesServiceAccount

    Attributes
    ----------
    annotations : any, optional
    create : bool, optional, default is False
    extraServiceAccounts : ValuesServiceAccountExtraServiceAccounts, optional
    labels : any, optional
    name : str, optional
    """

    annotations?: any
    create?: bool
    extraServiceAccounts?: ValuesServiceAccountExtraServiceAccounts
    labels?: any
    name?: str

schema ValuesServiceAccountExtraServiceAccounts:
    r"""
    ValuesServiceAccountExtraServiceAccounts
    """

    [...str]: ValuesServiceAccountExtraServiceAccountsAdditionalProperties

schema ValuesServiceAccountExtraServiceAccountsAdditionalProperties:
    r"""
    ValuesServiceAccountExtraServiceAccountsAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    create : bool, optional, default is False
    labels : any, optional
    name : str, optional
    """

    annotations?: any
    create?: bool
    labels?: any
    name?: str

schema ValuesServiceAdditionalProperties:
    r"""
    ValuesServiceAdditionalProperties

    Attributes
    ----------
    allocateLoadBalancerNodePorts : bool, optional
    annotations : any, optional
    clusterIP : str, optional
    controller : str, optional
    enabled : bool, optional, default is True
    externalIPs : [str], optional
    externalName : str, optional
    externalTrafficPolicy : "Cluster" | "Local", optional
    extraSelectorLabels : any, optional
    internalTrafficPolicy : "Cluster" | "Local", optional
    ipFamilies : ["IPv4" | "IPv6"], optional
    ipFamilyPolicy : "SingleStack" | "PreferDualStack" | "RequireDualStack", optional
    labels : any, optional
    loadBalancerClass : str, optional
    loadBalancerIP : str, optional
    loadBalancerSourceRanges : [str], optional
    nameOverride : str, optional
    ports : ValuesServiceAdditionalPropertiesPorts, optional
    primary : bool, optional, default is False
    publishNotReadyAddresses : bool, optional
    sessionAffinity : "None" | "ClientIP", optional
    sessionAffinityConfig : ValuesServiceAdditionalPropertiesSessionAffinityConfig, optional
    $type : str, optional
    """

    allocateLoadBalancerNodePorts?: bool
    annotations?: any
    clusterIP?: str
    controller?: str
    enabled?: bool
    externalIPs?: [str]
    externalName?: str
    externalTrafficPolicy?: "Cluster" | "Local"
    extraSelectorLabels?: any
    internalTrafficPolicy?: "Cluster" | "Local"
    ipFamilies?: ["IPv4" | "IPv6"]
    ipFamilyPolicy?: "SingleStack" | "PreferDualStack" | "RequireDualStack"
    labels?: any
    loadBalancerClass?: str
    loadBalancerIP?: str
    loadBalancerSourceRanges?: [str]
    nameOverride?: str
    ports?: ValuesServiceAdditionalPropertiesPorts
    primary?: bool
    publishNotReadyAddresses?: bool
    sessionAffinity?: "None" | "ClientIP"
    sessionAffinityConfig?: ValuesServiceAdditionalPropertiesSessionAffinityConfig
    $type?: str

schema ValuesServiceAdditionalPropertiesPorts:
    r"""
    ValuesServiceAdditionalPropertiesPorts
    """

    [...str]: any

schema ValuesServiceAdditionalPropertiesSessionAffinityConfig:
    r"""
    ValuesServiceAdditionalPropertiesSessionAffinityConfig
    """

    [...str]: any

schema ValuesServiceMonitorAdditionalProperties:
    r"""
    ValuesServiceMonitorAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    enabled : bool, optional, default is True
    endpoints : [ValuesServiceMonitorAdditionalPropertiesEndpointsItems0], optional
    labels : any, optional
    nameOverride : str, optional
    selector : ValuesServiceMonitorAdditionalPropertiesSelector, optional
    serviceName : str, optional
    targetLabels : any, optional
    """

    annotations?: any
    enabled?: bool
    endpoints?: [ValuesServiceMonitorAdditionalPropertiesEndpointsItems0]
    labels?: any
    nameOverride?: str
    selector?: ValuesServiceMonitorAdditionalPropertiesSelector
    serviceName?: str
    targetLabels?: any

schema ValuesServiceMonitorAdditionalPropertiesEndpointsItems0:
    r"""
    ValuesServiceMonitorAdditionalPropertiesEndpointsItems0
    """

    [...str]: any

schema ValuesServiceMonitorAdditionalPropertiesSelector:
    r"""
    ValuesServiceMonitorAdditionalPropertiesSelector

    Attributes
    ----------
    matchExpressions : [ValuesServiceMonitorAdditionalPropertiesSelectorMatchExpressionsItems0], optional
    matchLabels : ValuesServiceMonitorAdditionalPropertiesSelectorMatchLabels, optional
    """

    matchExpressions?: [ValuesServiceMonitorAdditionalPropertiesSelectorMatchExpressionsItems0]
    matchLabels?: ValuesServiceMonitorAdditionalPropertiesSelectorMatchLabels

schema ValuesServiceMonitorAdditionalPropertiesSelectorMatchExpressionsItems0:
    r"""
    ValuesServiceMonitorAdditionalPropertiesSelectorMatchExpressionsItems0

    Attributes
    ----------
    key : str, optional
    operator : str, optional
    values : [str], optional
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesServiceMonitorAdditionalPropertiesSelectorMatchLabels:
    r"""
    ValuesServiceMonitorAdditionalPropertiesSelectorMatchLabels
    """

    [...str]: str

