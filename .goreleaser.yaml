# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

project_name: kclx

env:
  - DOCKER_REGISTRY=ghcr.io/macropower

before:
  hooks:
    - go mod tidy

# https://github.com/goreleaser/example-zig-cgo/
builds:
  - id: kclx
    main: ./cmd/kclx
    binary: kcl
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    env: &env
      - CGO_ENABLED=1
      - >-
        {{- if eq .Os "linux" }}
          {{- if eq .Arch "amd64" }}CC=zig cc -target x86_64-linux-gnu{{- end }}
          {{- if eq .Arch "arm64" }}CC=zig cc -target aarch64-linux-gnu{{- end }}
        {{- end }}
        {{- if eq .Os "darwin" }}
          {{- if eq .Arch "amd64" }}CC=zig cc -target x86_64-macos-none -F{{ envOrDefault "SDK_PATH" "" }}/System/Library/Frameworks{{- end }}
          {{- if eq .Arch "arm64" }}CC=zig cc -target aarch64-macos-none -F{{ envOrDefault "SDK_PATH" "" }}/System/Library/Frameworks{{- end }}
        {{- end }}
      - >-
        {{- if eq .Os "linux" }}
          {{- if eq .Arch "amd64" }}CXX=zig c++ -target x86_64-linux-gnu{{- end }}
          {{- if eq .Arch "arm64" }}CXX=zig c++ -target aarch64-linux-gnu{{- end }}
        {{- end }}
        {{- if eq .Os "darwin" }}
          {{- if eq .Arch "amd64" }}CXX=zig c++ -target x86_64-macos-none -F{{ envOrDefault "SDK_PATH" "" }}/System/Library/Frameworks{{- end }}
          {{- if eq .Arch "arm64" }}CXX=zig c++ -target aarch64-macos-none -F{{ envOrDefault "SDK_PATH" "" }}/System/Library/Frameworks{{- end }}
        {{- end }}
    ldflags: &ldflags
      - -s -w
      - -X github.com/MacroPower/kclx/internal/version.Version={{.Version}}
      - -X github.com/MacroPower/kclx/internal/version.Branch={{.Branch}}
      - -X github.com/MacroPower/kclx/internal/version.BuildUser={{.Env.USER}}@{{.Env.HOSTNAME}}
      - -X github.com/MacroPower/kclx/internal/version.BuildDate={{.Date}}
    flags:
      - -trimpath
    tags:
      - netgo
    hooks: &hooks
      pre:
        - cmd: >-
            {{- if and (eq .Arch .Runtime.Goarch) (eq .Os .Runtime.Goos) }}
            go test -c -vet=all -tags=netgo -ldflags=-s
            -o ./dist/{{ .ProjectName }}.test/ ./pkg/...
            {{- else }}
            echo "Skipping test binary build for non-native platform"
            {{- end }}

  - id: kclx-darwin
    main: ./cmd/kclx
    binary: kcl
    skip: '{{ envOrDefault "SKIP_DARWIN_BUILD" "false" }}'
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    env: *env
    ldflags: *ldflags
    buildmode: pie
    flags:
      - -trimpath
    tags:
      - netgo
    hooks: *hooks

dockers:
  - goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
    build_flag_templates:
      - '--platform=linux/amd64'
      - '--label=org.opencontainers.image.title={{ .ProjectName }}'
      - '--label=org.opencontainers.image.version={{ .Tag }}'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.created={{ .Date }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'
  - goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
    build_flag_templates:
      - '--platform=linux/arm64'
      - '--label=org.opencontainers.image.title={{ .ProjectName }}'
      - '--label=org.opencontainers.image.version={{ .Tag }}'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.created={{ .Date }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'

docker_manifests:
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:latest'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:v{{ .Major }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:v{{ .Major }}.{{ .Minor }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
checksum:
  name_template: 'checksums.txt'
snapshot:
  version_template: '{{ incpatch .Version }}-next'
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
