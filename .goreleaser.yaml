# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

project_name: kclipper

env:
  - DOCKER_REGISTRY=ghcr.io/macropower

before:
  hooks:
    - go mod tidy

# https://github.com/goreleaser/example-zig-cgo/
builds:
  - id: kclipper
    main: ./cmd/kclipper
    binary: kcl
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=1
      - |
        {{- if and (eq .Os "linux")  (eq .Arch "amd64") -}} CC={{ .Env.CC_LINUX_AMD64  }} {{- end -}}
        {{- if and (eq .Os "linux")  (eq .Arch "arm64") -}} CC={{ .Env.CC_LINUX_ARM64  }} {{- end -}}
        {{- if and (eq .Os "darwin") (eq .Arch "amd64") -}} CC={{ .Env.CC_DARWIN_AMD64 }} {{- end -}}
        {{- if and (eq .Os "darwin") (eq .Arch "arm64") -}} CC={{ .Env.CC_DARWIN_ARM64 }} {{- end -}}
      - |
        {{- if and (eq .Os "linux")  (eq .Arch "amd64") -}} CXX={{ .Env.CXX_LINUX_AMD64  }} {{- end -}}
        {{- if and (eq .Os "linux")  (eq .Arch "arm64") -}} CXX={{ .Env.CXX_LINUX_ARM64  }} {{- end -}}
        {{- if and (eq .Os "darwin") (eq .Arch "amd64") -}} CXX={{ .Env.CXX_DARWIN_AMD64 }} {{- end -}}
        {{- if and (eq .Os "darwin") (eq .Arch "arm64") -}} CXX={{ .Env.CXX_DARWIN_ARM64 }} {{- end -}}
    ldflags:
      - -s -w
      - -X github.com/MacroPower/kclipper/pkg/version.Version={{.Version}}
      - -X github.com/MacroPower/kclipper/pkg/version.Branch={{.Branch}}
      - -X github.com/MacroPower/kclipper/pkg/version.BuildUser={{.Env.USER}}@{{.Env.HOSTNAME}}
      - -X github.com/MacroPower/kclipper/pkg/version.BuildDate={{.Date}}
    flags:
      - -trimpath
      - -tags={{ .Env.BUILD_TAGS }}
    buildmode: pie

dockers:
  - goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
    build_flag_templates:
      - '--platform=linux/amd64'
      - '--build-arg=HELM_VERSION={{.Env.HELM_VERSION}}'
      - '--label=org.opencontainers.image.title={{ .ProjectName }}'
      - '--label=org.opencontainers.image.version={{ .Tag }}'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.created={{ .Date }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'
  - goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
    build_flag_templates:
      - '--platform=linux/arm64'
      - '--build-arg=HELM_VERSION={{.Env.HELM_VERSION}}'
      - '--label=org.opencontainers.image.title={{ .ProjectName }}'
      - '--label=org.opencontainers.image.version={{ .Tag }}'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.created={{ .Date }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'

docker_manifests:
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:latest'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:v{{ .Major }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'
  - name_template: '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:v{{ .Major }}.{{ .Minor }}'
    image_templates:
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64'
      - '{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64'

archives:
  - formats: [tar.gz]
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
checksum:
  name_template: 'checksums.txt'
snapshot:
  version_template: '{{ incpatch .Version }}-next'
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

brews:
  - repository:
      owner: MacroPower
      name: homebrew-tap
    url_template: >-
      https://github.com/MacroPower/kclipper/releases/download/{{ .Tag }}/
      {{- .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end -}}
      {{- if .Arm }}v{{ .Arm }}{{ end -}}
      .tar.gz
    download_strategy: CurlDownloadStrategy
    commit_msg_template: "chore: formula update for {{ .ProjectName }} {{ .Tag }}"
    commit_author:
      name: botty-mcbottington
      email: 168950816+botty-mcbottington[bot]@users.noreply.github.com
    homepage: "https://github.com/MacroPower/kclipper"
    description: "Kclipper Command Line Interface"
    license: "Apache License"
    skip_upload: false
    test: |
      system "#{bin}/kcl version"
