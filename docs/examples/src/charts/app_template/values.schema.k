"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

schema Values:
    r"""
    Values

    Attributes
    ----------
    configMaps : any, optional
    controllers : any, optional
    defaultPodOptions : ValuesDefaultPodOptions, optional
    enforceServiceAccountCreation : bool, optional
    global : ValuesGlobal, optional
    ingress : any, optional
    networkpolicies : any, optional
    persistence : any, optional
    rawResources : any, optional
    route : any, optional
    secrets : any, optional
    service : any, optional
    serviceAccount : ValuesServiceAccount, optional
    serviceMonitor : any, optional
    """

    configMaps?: any
    controllers?: any
    defaultPodOptions?: ValuesDefaultPodOptions
    enforceServiceAccountCreation?: bool
    global?: ValuesGlobal
    ingress?: any
    networkpolicies?: any
    persistence?: any
    rawResources?: any
    route?: any
    secrets?: any
    service?: any
    serviceAccount?: ValuesServiceAccount
    serviceMonitor?: any

schema ValuesConfigMapsAdditionalProperties:
    r"""
    ValuesConfigMapsAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    binaryData : ValuesConfigMapsAdditionalPropertiesBinaryData, optional
    data : ValuesConfigMapsAdditionalPropertiesData, optional
    enabled : bool, optional, default is True
    includeInChecksum : bool, optional, default is True
    labels : any, optional
    nameOverride : str, optional
    """

    annotations?: any
    binaryData?: ValuesConfigMapsAdditionalPropertiesBinaryData
    data?: ValuesConfigMapsAdditionalPropertiesData
    enabled?: bool
    includeInChecksum?: bool
    labels?: any
    nameOverride?: str

schema ValuesConfigMapsAdditionalPropertiesBinaryData:
    r"""
    ValuesConfigMapsAdditionalPropertiesBinaryData
    """

    [...str]: str

schema ValuesConfigMapsAdditionalPropertiesData:
    r"""
    ValuesConfigMapsAdditionalPropertiesData
    """

    [...str]: str

schema ValuesControllersAdditionalProperties:
    r"""
    ValuesControllersAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    applyDefaultContainerOptionsToInitContainers : bool, optional, default is True
    containers : ValuesControllersAdditionalPropertiesContainers, optional
    cronjob : ValuesControllersAdditionalPropertiesCronjob, optional
    defaultContainerOptions : ValuesControllersAdditionalPropertiesDefaultContainerOptions, optional
    defaultContainerOptionsStrategy : "overwrite" | "merge", optional, default is "overwrite"
    enabled : bool, optional, default is True
    initContainers : ValuesControllersAdditionalPropertiesInitContainers, optional
    job : ValuesControllersAdditionalPropertiesJob, optional
    labels : any, optional
    nameOverride : str, optional
    pod : ValuesControllersAdditionalPropertiesPod, optional
    replicas : int, optional, default is 1
    revisionHistoryLimit : int, optional
    rollingUpdate : ValuesControllersAdditionalPropertiesRollingUpdate, optional
    serviceAccount : ValuesControllersAdditionalPropertiesServiceAccount, optional
    statefulset : ValuesControllersAdditionalPropertiesStatefulset, optional
    strategy : str, optional
    $type : "deployment" | "statefulset" | "daemonset" | "cronjob" | "job", optional
    """

    annotations?: any
    applyDefaultContainerOptionsToInitContainers?: bool
    containers?: ValuesControllersAdditionalPropertiesContainers
    cronjob?: ValuesControllersAdditionalPropertiesCronjob
    defaultContainerOptions?: ValuesControllersAdditionalPropertiesDefaultContainerOptions
    defaultContainerOptionsStrategy?: "overwrite" | "merge"
    enabled?: bool
    initContainers?: ValuesControllersAdditionalPropertiesInitContainers
    job?: ValuesControllersAdditionalPropertiesJob
    labels?: any
    nameOverride?: str
    pod?: ValuesControllersAdditionalPropertiesPod
    replicas?: int
    revisionHistoryLimit?: int
    rollingUpdate?: ValuesControllersAdditionalPropertiesRollingUpdate
    serviceAccount?: ValuesControllersAdditionalPropertiesServiceAccount
    statefulset?: ValuesControllersAdditionalPropertiesStatefulset
    strategy?: str
    $type?: "deployment" | "statefulset" | "daemonset" | "cronjob" | "job"

schema ValuesControllersAdditionalPropertiesContainers:
    r"""
    ValuesControllersAdditionalPropertiesContainers
    """

    [...str]: ValuesControllersAdditionalPropertiesContainersAdditionalProperties

schema ValuesControllersAdditionalPropertiesContainersAdditionalProperties:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalProperties

    Attributes
    ----------
    args : str | str, optional
    command : str | str, optional
    dependsOn : str | str, optional
    enabled : bool, optional, default is True
    env : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0 | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnv, optional
    envFrom : [ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0], optional
    image : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesImage, optional
    lifecycle : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecycle, optional
        Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
    nameOverride : str, optional
    ports : [ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesPortsItems0], optional
    probes : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbes, optional
    resources : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResources, optional
        ResourceRequirements describes the compute resource requirements.
    restartPolicy : str, optional
    securityContext : any, optional
    stdin : bool, optional, default is False
    terminationMessagePath : str, optional
    terminationMessagePolicy : "File" | "FallbackToLogsOnError", optional
    tty : bool, optional, default is False
    workingDir : str, optional
    """

    args?: str | str
    command?: str | str
    dependsOn?: str | str
    enabled?: bool
    env?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0 | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnv
    envFrom?: [ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0]
    image?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesImage
    lifecycle?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecycle
    nameOverride?: str
    ports?: [ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesPortsItems0]
    probes?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbes
    resources?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResources
    restartPolicy?: str
    securityContext?: any
    stdin?: bool
    terminationMessagePath?: str
    terminationMessagePolicy?: "File" | "FallbackToLogsOnError"
    tty?: bool
    workingDir?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnv:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnv
    """

    [...str]: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalProperties

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalProperties:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalProperties

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesConfigMapKeyRef, optional
    dependsOn : [str], optional
    fieldRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesSecretKeyRef, optional
    value : str | float | bool, optional
    valueFrom : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFrom, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesConfigMapKeyRef
    dependsOn?: [str]
    fieldRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesSecretKeyRef
    value?: str | float | bool
    valueFrom?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFrom

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFrom:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFrom

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromSecretKeyRef, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromSecretKeyRef

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0

    Attributes
    ----------
    configMap : str, optional
    configMapRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0ConfigMapRef, optional
    prefix : str, optional
    secret : str, optional
    secretRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0SecretRef, optional
    """

    configMap?: str
    configMapRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0ConfigMapRef
    prefix?: str
    secret?: str
    secretRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0SecretRef

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0ConfigMapRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0ConfigMapRef

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    optional : bool, optional
    """

    identifier?: str
    name?: str
    optional?: bool

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0SecretRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvFromItems0SecretRef

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    optional : bool, optional
    """

    identifier?: str
    name?: str
    optional?: bool

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0FieldRef, optional
    name : str, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0SecretKeyRef, optional
    value : str | float | bool, optional
    valueFrom : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFrom, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0FieldRef
    name?: str
    resourceFieldRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0SecretKeyRef
    value?: str | float | bool
    valueFrom?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFrom

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0FieldRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0FieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0SecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0SecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFrom:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFrom

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromSecretKeyRef, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromSecretKeyRef

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesEnvItems0ValueFromSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesImage:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesImage

    Attributes
    ----------
    pullPolicy : "Always" | "IfNotPresent" | "Never", optional
    repository : str, optional
    tag : str | float, optional
    """

    pullPolicy?: "Always" | "IfNotPresent" | "Never"
    repository?: str
    tag?: str | float

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecycle:
    r"""
    Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.

    Attributes
    ----------
    postStart : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStart, optional
        PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    preStop : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStop, optional
        PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    """

    postStart?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStart
    preStop?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStop

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartExec, optional
        Exec specifies the action to take.
    httpGet : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartHttpGet, optional
        HTTPGet specifies the http request to perform.
    sleep : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartSleep, optional
        Sleep represents the duration that the container should sleep before being terminated.
    tcpSocket : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartTcpSocket, optional
        Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
    """

    exec?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartExec
    httpGet?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartHttpGet
    sleep?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartSleep
    tcpSocket?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartTcpSocket

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartSleep:
    r"""
    Sleep represents the duration that the container should sleep before being terminated.

    Attributes
    ----------
    seconds : int, optional
        Seconds is the number of seconds to sleep.
    """

    seconds?: int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePostStartTcpSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopExec, optional
        Exec specifies the action to take.
    httpGet : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopHttpGet, optional
        HTTPGet specifies the http request to perform.
    sleep : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopSleep, optional
        Sleep represents the duration that the container should sleep before being terminated.
    tcpSocket : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopTcpSocket, optional
        Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
    """

    exec?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopExec
    httpGet?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopHttpGet
    sleep?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopSleep
    tcpSocket?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopTcpSocket

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopSleep:
    r"""
    Sleep represents the duration that the container should sleep before being terminated.

    Attributes
    ----------
    seconds : int, optional
        Seconds is the number of seconds to sleep.
    """

    seconds?: int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesLifecyclePreStopTcpSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesPortsItems0:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesPortsItems0

    Attributes
    ----------
    containerPort : int, optional
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, optional
        What host IP to bind the external port to.
    hostPort : int, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """

    containerPort?: int
    hostIP?: str
    hostPort?: int
    name?: str
    $protocol?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbes:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbes

    Attributes
    ----------
    liveness : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLiveness, optional
    readiness : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadiness, optional
    startup : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartup, optional
    """

    liveness?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLiveness
    readiness?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadiness
    startup?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartup

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLiveness:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLiveness

    Attributes
    ----------
    custom : bool, optional, default is False
    enabled : bool, optional, default is False
    path : str, optional
    port : float | str, optional
    service : str, optional
    spec : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpec, optional
        Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    $type : "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO", optional
    """

    custom?: bool
    enabled?: bool
    path?: str
    port?: float | str
    service?: str
    spec?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpec
    $type?: "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO"

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpec:
    r"""
    Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecExec, optional
        Exec specifies the action to take.
    failureThreshold : int, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecGrpc, optional
        GRPC specifies an action involving a GRPC port.
    httpGet : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecHttpGet, optional
        HTTPGet specifies the http request to perform.
    initialDelaySeconds : int, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecTcpSocket, optional
        TCPSocket specifies an action involving a TCP port.
    terminationGracePeriodSeconds : int, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """

    exec?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecExec
    failureThreshold?: int
    grpc?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecGrpc
    httpGet?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecHttpGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecTcpSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """

    port?: int
    service?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesLivenessSpecTcpSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadiness:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadiness

    Attributes
    ----------
    custom : bool, optional, default is False
    enabled : bool, optional, default is False
    path : str, optional
    port : float | str, optional
    service : str, optional
    spec : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpec, optional
        Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    $type : "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO", optional
    """

    custom?: bool
    enabled?: bool
    path?: str
    port?: float | str
    service?: str
    spec?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpec
    $type?: "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO"

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpec:
    r"""
    Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecExec, optional
        Exec specifies the action to take.
    failureThreshold : int, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecGrpc, optional
        GRPC specifies an action involving a GRPC port.
    httpGet : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecHttpGet, optional
        HTTPGet specifies the http request to perform.
    initialDelaySeconds : int, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecTcpSocket, optional
        TCPSocket specifies an action involving a TCP port.
    terminationGracePeriodSeconds : int, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """

    exec?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecExec
    failureThreshold?: int
    grpc?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecGrpc
    httpGet?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecHttpGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecTcpSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """

    port?: int
    service?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesReadinessSpecTcpSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartup:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartup

    Attributes
    ----------
    custom : bool, optional, default is False
    enabled : bool, optional, default is False
    path : str, optional
    port : float | str, optional
    service : str, optional
    spec : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpec, optional
        Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    $type : "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO", optional
    """

    custom?: bool
    enabled?: bool
    path?: str
    port?: float | str
    service?: str
    spec?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpec
    $type?: "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO"

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpec:
    r"""
    Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecExec, optional
        Exec specifies the action to take.
    failureThreshold : int, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecGrpc, optional
        GRPC specifies an action involving a GRPC port.
    httpGet : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecHttpGet, optional
        HTTPGet specifies the http request to perform.
    initialDelaySeconds : int, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecTcpSocket, optional
        TCPSocket specifies an action involving a TCP port.
    terminationGracePeriodSeconds : int, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """

    exec?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecExec
    failureThreshold?: int
    grpc?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecGrpc
    httpGet?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecHttpGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecTcpSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """

    port?: int
    service?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesProbesStartupSpecTcpSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResources:
    r"""
    ResourceRequirements describes the compute resource requirements.

    Attributes
    ----------
    claims : [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResourcesClaimsItems0, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.

        This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : any, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : any, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """

    claims?: [any] | ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResourcesClaimsItems0
    limits?: any
    requests?: any

schema ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResourcesClaimsItems0:
    r"""
    ValuesControllersAdditionalPropertiesContainersAdditionalPropertiesResourcesClaimsItems0

    Attributes
    ----------
    name : str, optional
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """

    name?: str

schema ValuesControllersAdditionalPropertiesCronjob:
    r"""
    ValuesControllersAdditionalPropertiesCronjob

    Attributes
    ----------
    activeDeadlineSeconds : int, optional
    backoffLimit : int, optional, default is 6
    concurrencyPolicy : str, optional, default is "Forbid"
    failedJobsHistory : int, optional, default is 1
    parallelism : int, optional
    schedule : str, optional
    startingDeadlineSeconds : int, optional, default is 30
    successfulJobsHistory : int, optional, default is 1
    suspend : bool, optional, default is False
    timeZone : str, optional
    ttlSecondsAfterFinished : int, optional
    """

    activeDeadlineSeconds?: int
    backoffLimit?: int
    concurrencyPolicy?: str
    failedJobsHistory?: int
    parallelism?: int
    schedule?: str
    startingDeadlineSeconds?: int
    successfulJobsHistory?: int
    suspend?: bool
    timeZone?: str
    ttlSecondsAfterFinished?: int

schema ValuesControllersAdditionalPropertiesDefaultContainerOptions:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptions

    Attributes
    ----------
    args : str | str, optional
    command : str | str, optional
    env : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0 | ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnv, optional
    envFrom : [ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0], optional
    image : ValuesControllersAdditionalPropertiesDefaultContainerOptionsImage, optional
    resources : ValuesControllersAdditionalPropertiesDefaultContainerOptionsResources, optional
        ResourceRequirements describes the compute resource requirements.
    securityContext : any, optional
    """

    args?: str | str
    command?: str | str
    env?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0 | ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnv
    envFrom?: [ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0]
    image?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsImage
    resources?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsResources
    securityContext?: any

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnv:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnv
    """

    [...str]: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalProperties

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalProperties:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalProperties

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesConfigMapKeyRef, optional
    dependsOn : [str], optional
    fieldRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesSecretKeyRef, optional
    value : str | float | bool, optional
    valueFrom : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFrom, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesConfigMapKeyRef
    dependsOn?: [str]
    fieldRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesSecretKeyRef
    value?: str | float | bool
    valueFrom?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFrom

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFrom:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFrom

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromSecretKeyRef, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromSecretKeyRef

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvAdditionalPropertiesValueFromSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0

    Attributes
    ----------
    configMap : str, optional
    configMapRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0ConfigMapRef, optional
    prefix : str, optional
    secret : str, optional
    secretRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0SecretRef, optional
    """

    configMap?: str
    configMapRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0ConfigMapRef
    prefix?: str
    secret?: str
    secretRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0SecretRef

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0ConfigMapRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0ConfigMapRef

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    optional : bool, optional
    """

    identifier?: str
    name?: str
    optional?: bool

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0SecretRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvFromItems0SecretRef

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    optional : bool, optional
    """

    identifier?: str
    name?: str
    optional?: bool

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0FieldRef, optional
    name : str, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0SecretKeyRef, optional
    value : str | float | bool, optional
    valueFrom : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFrom, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0FieldRef
    name?: str
    resourceFieldRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0SecretKeyRef
    value?: str | float | bool
    valueFrom?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFrom

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0FieldRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0FieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0SecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0SecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFrom:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFrom

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromSecretKeyRef, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromSecretKeyRef

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsEnvItems0ValueFromSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsImage:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsImage

    Attributes
    ----------
    pullPolicy : "Always" | "IfNotPresent" | "Never", optional
    repository : str, optional
    tag : str | float, optional
    """

    pullPolicy?: "Always" | "IfNotPresent" | "Never"
    repository?: str
    tag?: str | float

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsResources:
    r"""
    ResourceRequirements describes the compute resource requirements.

    Attributes
    ----------
    claims : [any] | ValuesControllersAdditionalPropertiesDefaultContainerOptionsResourcesClaimsItems0, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.

        This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : any, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : any, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """

    claims?: [any] | ValuesControllersAdditionalPropertiesDefaultContainerOptionsResourcesClaimsItems0
    limits?: any
    requests?: any

schema ValuesControllersAdditionalPropertiesDefaultContainerOptionsResourcesClaimsItems0:
    r"""
    ValuesControllersAdditionalPropertiesDefaultContainerOptionsResourcesClaimsItems0

    Attributes
    ----------
    name : str, optional
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """

    name?: str

schema ValuesControllersAdditionalPropertiesInitContainers:
    r"""
    ValuesControllersAdditionalPropertiesInitContainers
    """

    [...str]: ValuesControllersAdditionalPropertiesInitContainersAdditionalProperties

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalProperties:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalProperties

    Attributes
    ----------
    args : str | str, optional
    command : str | str, optional
    dependsOn : str | str, optional
    enabled : bool, optional, default is True
    env : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0 | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnv, optional
    envFrom : [ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0], optional
    image : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesImage, optional
    lifecycle : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecycle, optional
        Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
    nameOverride : str, optional
    ports : [ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesPortsItems0], optional
    probes : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbes, optional
    resources : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResources, optional
        ResourceRequirements describes the compute resource requirements.
    restartPolicy : str, optional
    securityContext : any, optional
    stdin : bool, optional, default is False
    terminationMessagePath : str, optional
    terminationMessagePolicy : "File" | "FallbackToLogsOnError", optional
    tty : bool, optional, default is False
    workingDir : str, optional
    """

    args?: str | str
    command?: str | str
    dependsOn?: str | str
    enabled?: bool
    env?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0 | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnv
    envFrom?: [ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0]
    image?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesImage
    lifecycle?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecycle
    nameOverride?: str
    ports?: [ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesPortsItems0]
    probes?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbes
    resources?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResources
    restartPolicy?: str
    securityContext?: any
    stdin?: bool
    terminationMessagePath?: str
    terminationMessagePolicy?: "File" | "FallbackToLogsOnError"
    tty?: bool
    workingDir?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnv:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnv
    """

    [...str]: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalProperties

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalProperties:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalProperties

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesConfigMapKeyRef, optional
    dependsOn : [str], optional
    fieldRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesSecretKeyRef, optional
    value : str | float | bool, optional
    valueFrom : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFrom, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesConfigMapKeyRef
    dependsOn?: [str]
    fieldRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesSecretKeyRef
    value?: str | float | bool
    valueFrom?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFrom

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFrom:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFrom

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromSecretKeyRef, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromSecretKeyRef

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvAdditionalPropertiesValueFromSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0

    Attributes
    ----------
    configMap : str, optional
    configMapRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0ConfigMapRef, optional
    prefix : str, optional
    secret : str, optional
    secretRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0SecretRef, optional
    """

    configMap?: str
    configMapRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0ConfigMapRef
    prefix?: str
    secret?: str
    secretRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0SecretRef

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0ConfigMapRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0ConfigMapRef

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    optional : bool, optional
    """

    identifier?: str
    name?: str
    optional?: bool

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0SecretRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvFromItems0SecretRef

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    optional : bool, optional
    """

    identifier?: str
    name?: str
    optional?: bool

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0FieldRef, optional
    name : str, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0SecretKeyRef, optional
    value : str | float | bool, optional
    valueFrom : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFrom, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0FieldRef
    name?: str
    resourceFieldRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0SecretKeyRef
    value?: str | float | bool
    valueFrom?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFrom

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0FieldRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0FieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0SecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0SecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFrom:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFrom

    Attributes
    ----------
    configMapKeyRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromConfigMapKeyRef, optional
    fieldRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromFieldRef, optional
    resourceFieldRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromResourceFieldRef, optional
    secretKeyRef : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromSecretKeyRef, optional
    """

    configMapKeyRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromConfigMapKeyRef
    fieldRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromFieldRef
    resourceFieldRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromResourceFieldRef
    secretKeyRef?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromSecretKeyRef

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromConfigMapKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromConfigMapKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromFieldRef

    Attributes
    ----------
    apiVersion : str, optional
    fieldPath : str, optional
    """

    apiVersion?: str
    fieldPath?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromResourceFieldRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromResourceFieldRef

    Attributes
    ----------
    containerName : str, optional
    divisor : float, optional
    resource : str, optional
    """

    containerName?: str
    divisor?: float
    resource?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromSecretKeyRef:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesEnvItems0ValueFromSecretKeyRef

    Attributes
    ----------
    key : str, optional
    name : str, optional
    """

    key?: str
    name?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesImage:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesImage

    Attributes
    ----------
    pullPolicy : "Always" | "IfNotPresent" | "Never", optional
    repository : str, optional
    tag : str | float, optional
    """

    pullPolicy?: "Always" | "IfNotPresent" | "Never"
    repository?: str
    tag?: str | float

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecycle:
    r"""
    Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.

    Attributes
    ----------
    postStart : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStart, optional
        PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    preStop : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStop, optional
        PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    """

    postStart?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStart
    preStop?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStop

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartExec, optional
        Exec specifies the action to take.
    httpGet : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartHttpGet, optional
        HTTPGet specifies the http request to perform.
    sleep : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartSleep, optional
        Sleep represents the duration that the container should sleep before being terminated.
    tcpSocket : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartTcpSocket, optional
        Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
    """

    exec?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartExec
    httpGet?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartHttpGet
    sleep?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartSleep
    tcpSocket?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartTcpSocket

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartSleep:
    r"""
    Sleep represents the duration that the container should sleep before being terminated.

    Attributes
    ----------
    seconds : int, optional
        Seconds is the number of seconds to sleep.
    """

    seconds?: int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePostStartTcpSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopExec, optional
        Exec specifies the action to take.
    httpGet : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopHttpGet, optional
        HTTPGet specifies the http request to perform.
    sleep : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopSleep, optional
        Sleep represents the duration that the container should sleep before being terminated.
    tcpSocket : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopTcpSocket, optional
        Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
    """

    exec?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopExec
    httpGet?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopHttpGet
    sleep?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopSleep
    tcpSocket?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopTcpSocket

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopSleep:
    r"""
    Sleep represents the duration that the container should sleep before being terminated.

    Attributes
    ----------
    seconds : int, optional
        Seconds is the number of seconds to sleep.
    """

    seconds?: int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesLifecyclePreStopTcpSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesPortsItems0:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesPortsItems0

    Attributes
    ----------
    containerPort : int, optional
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, optional
        What host IP to bind the external port to.
    hostPort : int, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """

    containerPort?: int
    hostIP?: str
    hostPort?: int
    name?: str
    $protocol?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbes:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbes

    Attributes
    ----------
    liveness : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLiveness, optional
    readiness : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadiness, optional
    startup : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartup, optional
    """

    liveness?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLiveness
    readiness?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadiness
    startup?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartup

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLiveness:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLiveness

    Attributes
    ----------
    custom : bool, optional, default is False
    enabled : bool, optional, default is False
    path : str, optional
    port : float | str, optional
    service : str, optional
    spec : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpec, optional
        Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    $type : "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO", optional
    """

    custom?: bool
    enabled?: bool
    path?: str
    port?: float | str
    service?: str
    spec?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpec
    $type?: "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO"

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpec:
    r"""
    Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecExec, optional
        Exec specifies the action to take.
    failureThreshold : int, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecGrpc, optional
        GRPC specifies an action involving a GRPC port.
    httpGet : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecHttpGet, optional
        HTTPGet specifies the http request to perform.
    initialDelaySeconds : int, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecTcpSocket, optional
        TCPSocket specifies an action involving a TCP port.
    terminationGracePeriodSeconds : int, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """

    exec?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecExec
    failureThreshold?: int
    grpc?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecGrpc
    httpGet?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecHttpGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecTcpSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """

    port?: int
    service?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesLivenessSpecTcpSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadiness:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadiness

    Attributes
    ----------
    custom : bool, optional, default is False
    enabled : bool, optional, default is False
    path : str, optional
    port : float | str, optional
    service : str, optional
    spec : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpec, optional
        Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    $type : "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO", optional
    """

    custom?: bool
    enabled?: bool
    path?: str
    port?: float | str
    service?: str
    spec?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpec
    $type?: "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO"

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpec:
    r"""
    Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecExec, optional
        Exec specifies the action to take.
    failureThreshold : int, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecGrpc, optional
        GRPC specifies an action involving a GRPC port.
    httpGet : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecHttpGet, optional
        HTTPGet specifies the http request to perform.
    initialDelaySeconds : int, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecTcpSocket, optional
        TCPSocket specifies an action involving a TCP port.
    terminationGracePeriodSeconds : int, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """

    exec?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecExec
    failureThreshold?: int
    grpc?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecGrpc
    httpGet?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecHttpGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecTcpSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """

    port?: int
    service?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesReadinessSpecTcpSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartup:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartup

    Attributes
    ----------
    custom : bool, optional, default is False
    enabled : bool, optional, default is False
    path : str, optional
    port : float | str, optional
    service : str, optional
    spec : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpec, optional
        Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    $type : "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO", optional
    """

    custom?: bool
    enabled?: bool
    path?: str
    port?: float | str
    service?: str
    spec?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpec
    $type?: "TCP" | "HTTP" | "HTTPS" | "GRPC" | "AUTO"

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpec:
    r"""
    Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.

    Attributes
    ----------
    exec : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecExec, optional
        Exec specifies the action to take.
    failureThreshold : int, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecGrpc, optional
        GRPC specifies an action involving a GRPC port.
    httpGet : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecHttpGet, optional
        HTTPGet specifies the http request to perform.
    initialDelaySeconds : int, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecTcpSocket, optional
        TCPSocket specifies an action involving a TCP port.
    terminationGracePeriodSeconds : int, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """

    exec?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecExec
    failureThreshold?: int
    grpc?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecGrpc
    httpGet?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecHttpGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecTcpSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [any] | str, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """

    command?: [any] | str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """

    port?: int
    service?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecHttpGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecHttpGetHttpHeadersItems0, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, optional
        Path to access on the HTTP server.
    port : str | int, optional
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """

    host?: str
    httpHeaders?: [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecHttpGetHttpHeadersItems0
    path?: str
    port?: str | int
    scheme?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecHttpGetHttpHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, optional
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, optional
        The header field value
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesProbesStartupSpecTcpSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : str | int, optional
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """

    host?: str
    port?: str | int

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResources:
    r"""
    ResourceRequirements describes the compute resource requirements.

    Attributes
    ----------
    claims : [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResourcesClaimsItems0, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.

        This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : any, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : any, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """

    claims?: [any] | ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResourcesClaimsItems0
    limits?: any
    requests?: any

schema ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResourcesClaimsItems0:
    r"""
    ValuesControllersAdditionalPropertiesInitContainersAdditionalPropertiesResourcesClaimsItems0

    Attributes
    ----------
    name : str, optional
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """

    name?: str

schema ValuesControllersAdditionalPropertiesJob:
    r"""
    ValuesControllersAdditionalPropertiesJob

    Attributes
    ----------
    activeDeadlineSeconds : int, optional
    backoffLimit : int, optional, default is 6
    completionMode : any, optional
    completions : any, optional
    parallelism : int, optional
    suspend : bool, optional, default is False
    ttlSecondsAfterFinished : int, optional
    """

    activeDeadlineSeconds?: int
    backoffLimit?: int
    completionMode?: any
    completions?: any
    parallelism?: int
    suspend?: bool
    ttlSecondsAfterFinished?: int

schema ValuesControllersAdditionalPropertiesPod:
    r"""
    ValuesControllersAdditionalPropertiesPod

    Attributes
    ----------
    affinity : ValuesControllersAdditionalPropertiesPodAffinity, optional
        Affinity is a group of affinity scheduling rules.
    annotations : any, optional
    automountServiceAccountToken : bool, optional, default is True
    dnsConfig : ValuesControllersAdditionalPropertiesPodDnsConfig, optional
        PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
    dnsPolicy : str, optional
    enableServiceLinks : bool, optional, default is False
    hostAliases : [ValuesControllersAdditionalPropertiesPodHostAliasesItems0], optional
    hostIPC : bool, optional, default is False
    hostNetwork : bool, optional, default is False
    hostPID : bool, optional, default is False
    hostUsers : bool, optional
    hostname : str, optional
    imagePullSecrets : [ValuesControllersAdditionalPropertiesPodImagePullSecretsItems0], optional
    labels : any, optional
    nodeSelector : ValuesControllersAdditionalPropertiesPodNodeSelector, optional
    priorityClassName : str, optional
    restartPolicy : str, optional
    runtimeClassName : str, optional
    schedulerName : str, optional
    securityContext : ValuesControllersAdditionalPropertiesPodSecurityContext, optional
        PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
    shareProcessNamespace : bool, optional, default is False
    terminationGracePeriodSeconds : int, optional
    tolerations : [ValuesControllersAdditionalPropertiesPodTolerationsItems0], optional
    topologySpreadConstraints : [ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0], optional
    """

    affinity?: ValuesControllersAdditionalPropertiesPodAffinity
    annotations?: any
    automountServiceAccountToken?: bool
    dnsConfig?: ValuesControllersAdditionalPropertiesPodDnsConfig
    dnsPolicy?: str
    enableServiceLinks?: bool
    hostAliases?: [ValuesControllersAdditionalPropertiesPodHostAliasesItems0]
    hostIPC?: bool
    hostNetwork?: bool
    hostPID?: bool
    hostUsers?: bool
    hostname?: str
    imagePullSecrets?: [ValuesControllersAdditionalPropertiesPodImagePullSecretsItems0]
    labels?: any
    nodeSelector?: ValuesControllersAdditionalPropertiesPodNodeSelector
    priorityClassName?: str
    restartPolicy?: str
    runtimeClassName?: str
    schedulerName?: str
    securityContext?: ValuesControllersAdditionalPropertiesPodSecurityContext
    shareProcessNamespace?: bool
    terminationGracePeriodSeconds?: int
    tolerations?: [ValuesControllersAdditionalPropertiesPodTolerationsItems0]
    topologySpreadConstraints?: [ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0]

schema ValuesControllersAdditionalPropertiesPodAffinity:
    r"""
    Affinity is a group of affinity scheduling rules.

    Attributes
    ----------
    nodeAffinity : ValuesControllersAdditionalPropertiesPodAffinityNodeAffinity, optional
        Describes node affinity scheduling rules for the pod.
    podAffinity : ValuesControllersAdditionalPropertiesPodAffinityPodAffinity, optional
        Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
    podAntiAffinity : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinity, optional
        Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
    """

    nodeAffinity?: ValuesControllersAdditionalPropertiesPodAffinityNodeAffinity
    podAffinity?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinity
    podAntiAffinity?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinity

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinity:
    r"""
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
    """

    preferredDuringSchedulingIgnoredDuringExecution?: [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, optional
        A node selector term, associated with the corresponding weight.
    weight : int, optional
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """

    preference?: ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference
    weight?: int

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    r"""
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], optional
        A list of node selector requirements by node's labels.
    matchFields : [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], optional
        A list of node selector requirements by node's fields.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]
    matchFields?: [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        The label key that the selector applies to.
    operator : str, optional
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        The label key that the selector applies to.
    operator : str, optional
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    r"""
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], optional
        Required. A list of node selector terms. The terms are ORed.
    """

    nodeSelectorTerms?: [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    r"""
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], optional
        A list of node selector requirements by node's labels.
    matchFields : [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], optional
        A list of node selector requirements by node's fields.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]
    matchFields?: [ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        The label key that the selector applies to.
    operator : str, optional
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        The label key that the selector applies to.
    operator : str, optional
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinity:
    r"""
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """

    preferredDuringSchedulingIgnoredDuringExecution?: [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, optional
        Required. A pod affinity term, associated with the corresponding weight.
    weight : int, optional
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """

    podAffinityTerm?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm
    weight?: int

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, optional
        A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    mismatchLabelKeys : [str], optional
        MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    namespaceSelector : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, optional
        A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
    namespaces : [str], optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, optional
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """

    labelSelector?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector
    namespaces?: [str]
    topologyKey?: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, optional
        A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    mismatchLabelKeys : [str], optional
        MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    namespaceSelector : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, optional
        A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
    namespaces : [str], optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, optional
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """

    labelSelector?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector
    namespaces?: [str]
    topologyKey?: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinity:
    r"""
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """

    preferredDuringSchedulingIgnoredDuringExecution?: [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, optional
        Required. A pod affinity term, associated with the corresponding weight.
    weight : int, optional
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """

    podAffinityTerm?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm
    weight?: int

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, optional
        A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    mismatchLabelKeys : [str], optional
        MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    namespaceSelector : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, optional
        A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
    namespaces : [str], optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, optional
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """

    labelSelector?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector
    namespaces?: [str]
    topologyKey?: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, optional
        A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    mismatchLabelKeys : [str], optional
        MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    namespaceSelector : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, optional
        A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
    namespaces : [str], optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, optional
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """

    labelSelector?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector
    namespaces?: [str]
    topologyKey?: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodDnsConfig:
    r"""
    PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.

    Attributes
    ----------
    nameservers : [str], optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [ValuesControllersAdditionalPropertiesPodDnsConfigOptionsItems0], optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """

    nameservers?: [str]
    options?: [ValuesControllersAdditionalPropertiesPodDnsConfigOptionsItems0]
    searches?: [str]

schema ValuesControllersAdditionalPropertiesPodDnsConfigOptionsItems0:
    r"""
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, optional
        Required.
    value : str, optional
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesPodHostAliasesItems0:
    r"""
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.

    Attributes
    ----------
    hostnames : [str], optional
        Hostnames for the above IP address.
    ip : str, optional
        IP address of the host file entry.
    """

    hostnames?: [str]
    ip?: str

schema ValuesControllersAdditionalPropertiesPodImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """

    name?: str

schema ValuesControllersAdditionalPropertiesPodNodeSelector:
    r"""
    ValuesControllersAdditionalPropertiesPodNodeSelector
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesPodSecurityContext:
    r"""
    PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.

    Attributes
    ----------
    fsGroup : int, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

        1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

        If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
    fsGroupChangePolicy : str, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : ValuesControllersAdditionalPropertiesPodSecurityContextSeLinuxOptions, optional
        The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seccompProfile : ValuesControllersAdditionalPropertiesPodSecurityContextSeccompProfile, optional
        The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.
    supplementalGroups : [int], optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.
    sysctls : [ValuesControllersAdditionalPropertiesPodSecurityContextSysctlsItems0], optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
    """

    fsGroup?: int
    fsGroupChangePolicy?: str
    runAsGroup?: int
    runAsNonRoot?: bool
    runAsUser?: int
    seLinuxOptions?: ValuesControllersAdditionalPropertiesPodSecurityContextSeLinuxOptions
    seccompProfile?: ValuesControllersAdditionalPropertiesPodSecurityContextSeccompProfile
    supplementalGroups?: [int]
    sysctls?: [ValuesControllersAdditionalPropertiesPodSecurityContextSysctlsItems0]

schema ValuesControllersAdditionalPropertiesPodSecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, optional
        Level is SELinux level label that applies to the container.
    role : str, optional
        Role is a SELinux role label that applies to the container.
    $type : str, optional
        Type is a SELinux type label that applies to the container.
    user : str, optional
        User is a SELinux user label that applies to the container.
    """

    level?: str
    role?: str
    $type?: str
    user?: str

schema ValuesControllersAdditionalPropertiesPodSecurityContextSeccompProfile:
    r"""
    The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, optional
        type indicates which kind of seccomp profile will be applied. Valid options are:

        Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """

    localhostProfile?: str
    $type?: str

schema ValuesControllersAdditionalPropertiesPodSecurityContextSysctlsItems0:
    r"""
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, optional
        Name of a property to set
    value : str, optional
        Value of a property to set
    """

    name?: str
    value?: str

schema ValuesControllersAdditionalPropertiesPodTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """

    effect?: str
    key?: str
    operator?: str
    tolerationSeconds?: int
    value?: str

schema ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0:
    r"""
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelector, optional
        LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.

        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, optional
        MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, optional
        MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.

        This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
    nodeAffinityPolicy : str, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

        If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    nodeTaintsPolicy : str, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.

        If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    topologyKey : str, optional
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology. And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology. It's a required field.
    whenUnsatisfiable : str, optional
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,
          but giving higher precedence to topologies that would help reduce the
          skew.
        A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """

    labelSelector?: ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelector
    matchLabelKeys?: [str]
    maxSkew?: int
    minDomains?: int
    nodeAffinityPolicy?: str
    nodeTaintsPolicy?: str
    topologyKey?: str
    whenUnsatisfiable?: str

schema ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelector:
    r"""
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelectorMatchLabels

schema ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesControllersAdditionalPropertiesPodTopologySpreadConstraintsItems0LabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesControllersAdditionalPropertiesRollingUpdate:
    r"""
    ValuesControllersAdditionalPropertiesRollingUpdate
    """

    [...str]: any

schema ValuesControllersAdditionalPropertiesServiceAccount:
    r"""
    ValuesControllersAdditionalPropertiesServiceAccount

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    """

    identifier?: str
    name?: str

schema ValuesControllersAdditionalPropertiesStatefulset:
    r"""
    ValuesControllersAdditionalPropertiesStatefulset

    Attributes
    ----------
    persistentVolumeClaimRetentionPolicy : ValuesControllersAdditionalPropertiesStatefulsetPersistentVolumeClaimRetentionPolicy, optional
    podManagementPolicy : str, optional
    volumeClaimTemplates : [ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0], optional
    """

    persistentVolumeClaimRetentionPolicy?: ValuesControllersAdditionalPropertiesStatefulsetPersistentVolumeClaimRetentionPolicy
    podManagementPolicy?: str
    volumeClaimTemplates?: [ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0]

schema ValuesControllersAdditionalPropertiesStatefulsetPersistentVolumeClaimRetentionPolicy:
    r"""
    ValuesControllersAdditionalPropertiesStatefulsetPersistentVolumeClaimRetentionPolicy

    Attributes
    ----------
    whenDeleted : "Delete" | "Retain", optional, default is "Retain"
    whenScaled : "Delete" | "Retain", optional, default is "Retain"
    """

    whenDeleted?: "Delete" | "Retain"
    whenScaled?: "Delete" | "Retain"

schema ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0:
    r"""
    ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0

    Attributes
    ----------
    accessMode : str, optional
    advancedMounts : ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0AdvancedMounts, optional
    annotations : any, optional
    dataSource : ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0DataSource, optional
    dataSourceRef : ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0DataSourceRef, optional
    enabled : bool, optional, default is True
    globalMounts : [ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0GlobalMountsItems0], optional
    labels : any, optional
    name : str, optional
    size : str, optional
    storageClass : str, optional
    """

    accessMode?: str
    advancedMounts?: ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0AdvancedMounts
    annotations?: any
    dataSource?: ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0DataSource
    dataSourceRef?: ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0DataSourceRef
    enabled?: bool
    globalMounts?: [ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0GlobalMountsItems0]
    labels?: any
    name?: str
    size?: str
    storageClass?: str

schema ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0AdvancedMounts:
    r"""
    ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0AdvancedMounts
    """

    [...str]: [ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0AdvancedMountsAdditionalPropertiesItems0]

schema ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0AdvancedMountsAdditionalPropertiesItems0:
    r"""
    ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0AdvancedMountsAdditionalPropertiesItems0

    Attributes
    ----------
    mountPropagation : str, optional
    path : str, optional
    readOnly : bool, optional
    subPath : str, optional
    """

    mountPropagation?: str
    path?: str
    readOnly?: bool
    subPath?: str

schema ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0DataSource:
    r"""
    ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0DataSource

    Attributes
    ----------
    apiGroup : str, optional
    kind : str, optional
    name : str, optional
    """

    apiGroup?: str
    kind?: str
    name?: str

schema ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0DataSourceRef:
    r"""
    ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0DataSourceRef

    Attributes
    ----------
    apiGroup : str, optional
    kind : str, optional
    name : str, optional
    """

    apiGroup?: str
    kind?: str
    name?: str

schema ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0GlobalMountsItems0:
    r"""
    ValuesControllersAdditionalPropertiesStatefulsetVolumeClaimTemplatesItems0GlobalMountsItems0

    Attributes
    ----------
    mountPropagation : str, optional
    path : str, optional
    readOnly : bool, optional
    subPath : str, optional
    """

    mountPropagation?: str
    path?: str
    readOnly?: bool
    subPath?: str

schema ValuesDefaultPodOptions:
    r"""
    ValuesDefaultPodOptions

    Attributes
    ----------
    affinity : ValuesDefaultPodOptionsAffinity, optional
        Affinity is a group of affinity scheduling rules.
    annotations : any, optional
    automountServiceAccountToken : bool, optional, default is True
    dnsConfig : ValuesDefaultPodOptionsDnsConfig, optional
        PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
    dnsPolicy : str, optional
    enableServiceLinks : bool, optional, default is False
    hostAliases : [ValuesDefaultPodOptionsHostAliasesItems0], optional
    hostIPC : bool, optional, default is False
    hostNetwork : bool, optional, default is False
    hostPID : bool, optional, default is False
    hostUsers : bool, optional
    hostname : str, optional
    imagePullSecrets : [ValuesDefaultPodOptionsImagePullSecretsItems0], optional
    labels : any, optional
    nodeSelector : ValuesDefaultPodOptionsNodeSelector, optional
    priorityClassName : str, optional
    restartPolicy : str, optional
    runtimeClassName : str, optional
    schedulerName : str, optional
    securityContext : ValuesDefaultPodOptionsSecurityContext, optional
        PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
    shareProcessNamespace : bool, optional, default is False
    terminationGracePeriodSeconds : int, optional
    tolerations : [ValuesDefaultPodOptionsTolerationsItems0], optional
    topologySpreadConstraints : [ValuesDefaultPodOptionsTopologySpreadConstraintsItems0], optional
    """

    affinity?: ValuesDefaultPodOptionsAffinity
    annotations?: any
    automountServiceAccountToken?: bool
    dnsConfig?: ValuesDefaultPodOptionsDnsConfig
    dnsPolicy?: str
    enableServiceLinks?: bool
    hostAliases?: [ValuesDefaultPodOptionsHostAliasesItems0]
    hostIPC?: bool
    hostNetwork?: bool
    hostPID?: bool
    hostUsers?: bool
    hostname?: str
    imagePullSecrets?: [ValuesDefaultPodOptionsImagePullSecretsItems0]
    labels?: any
    nodeSelector?: ValuesDefaultPodOptionsNodeSelector
    priorityClassName?: str
    restartPolicy?: str
    runtimeClassName?: str
    schedulerName?: str
    securityContext?: ValuesDefaultPodOptionsSecurityContext
    shareProcessNamespace?: bool
    terminationGracePeriodSeconds?: int
    tolerations?: [ValuesDefaultPodOptionsTolerationsItems0]
    topologySpreadConstraints?: [ValuesDefaultPodOptionsTopologySpreadConstraintsItems0]

schema ValuesDefaultPodOptionsAffinity:
    r"""
    Affinity is a group of affinity scheduling rules.

    Attributes
    ----------
    nodeAffinity : ValuesDefaultPodOptionsAffinityNodeAffinity, optional
        Describes node affinity scheduling rules for the pod.
    podAffinity : ValuesDefaultPodOptionsAffinityPodAffinity, optional
        Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
    podAntiAffinity : ValuesDefaultPodOptionsAffinityPodAntiAffinity, optional
        Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
    """

    nodeAffinity?: ValuesDefaultPodOptionsAffinityNodeAffinity
    podAffinity?: ValuesDefaultPodOptionsAffinityPodAffinity
    podAntiAffinity?: ValuesDefaultPodOptionsAffinityPodAntiAffinity

schema ValuesDefaultPodOptionsAffinityNodeAffinity:
    r"""
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
    """

    preferredDuringSchedulingIgnoredDuringExecution?: [ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution

schema ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, optional
        A node selector term, associated with the corresponding weight.
    weight : int, optional
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """

    preference?: ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference
    weight?: int

schema ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    r"""
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], optional
        A list of node selector requirements by node's labels.
    matchFields : [ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], optional
        A list of node selector requirements by node's fields.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]
    matchFields?: [ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]

schema ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        The label key that the selector applies to.
    operator : str, optional
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        The label key that the selector applies to.
    operator : str, optional
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    r"""
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], optional
        Required. A list of node selector terms. The terms are ORed.
    """

    nodeSelectorTerms?: [ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]

schema ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    r"""
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], optional
        A list of node selector requirements by node's labels.
    matchFields : [ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], optional
        A list of node selector requirements by node's fields.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]
    matchFields?: [ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]

schema ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        The label key that the selector applies to.
    operator : str, optional
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        The label key that the selector applies to.
    operator : str, optional
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAffinity:
    r"""
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """

    preferredDuringSchedulingIgnoredDuringExecution?: [ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: [ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]

schema ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, optional
        Required. A pod affinity term, associated with the corresponding weight.
    weight : int, optional
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """

    podAffinityTerm?: ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm
    weight?: int

schema ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, optional
        A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    mismatchLabelKeys : [str], optional
        MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    namespaceSelector : ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, optional
        A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
    namespaces : [str], optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, optional
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """

    labelSelector?: ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector
    namespaces?: [str]
    topologyKey?: str

schema ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels

schema ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels

schema ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, optional
        A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    mismatchLabelKeys : [str], optional
        MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    namespaceSelector : ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, optional
        A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
    namespaces : [str], optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, optional
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """

    labelSelector?: ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector
    namespaces?: [str]
    topologyKey?: str

schema ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels

schema ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels

schema ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesDefaultPodOptionsAffinityPodAntiAffinity:
    r"""
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """

    preferredDuringSchedulingIgnoredDuringExecution?: [ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: [ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, optional
        Required. A pod affinity term, associated with the corresponding weight.
    weight : int, optional
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """

    podAffinityTerm?: ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm
    weight?: int

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, optional
        A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    mismatchLabelKeys : [str], optional
        MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    namespaceSelector : ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, optional
        A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
    namespaces : [str], optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, optional
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """

    labelSelector?: ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector
    namespaces?: [str]
    topologyKey?: str

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, optional
        A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    mismatchLabelKeys : [str], optional
        MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
    namespaceSelector : ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, optional
        A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
    namespaces : [str], optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, optional
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """

    labelSelector?: ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector
    namespaces?: [str]
    topologyKey?: str

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesDefaultPodOptionsDnsConfig:
    r"""
    PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.

    Attributes
    ----------
    nameservers : [str], optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [ValuesDefaultPodOptionsDnsConfigOptionsItems0], optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """

    nameservers?: [str]
    options?: [ValuesDefaultPodOptionsDnsConfigOptionsItems0]
    searches?: [str]

schema ValuesDefaultPodOptionsDnsConfigOptionsItems0:
    r"""
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, optional
        Required.
    value : str, optional
    """

    name?: str
    value?: str

schema ValuesDefaultPodOptionsHostAliasesItems0:
    r"""
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.

    Attributes
    ----------
    hostnames : [str], optional
        Hostnames for the above IP address.
    ip : str, optional
        IP address of the host file entry.
    """

    hostnames?: [str]
    ip?: str

schema ValuesDefaultPodOptionsImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """

    name?: str

schema ValuesDefaultPodOptionsNodeSelector:
    r"""
    ValuesDefaultPodOptionsNodeSelector
    """

    [...str]: str

schema ValuesDefaultPodOptionsSecurityContext:
    r"""
    PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.

    Attributes
    ----------
    fsGroup : int, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

        1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

        If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
    fsGroupChangePolicy : str, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : ValuesDefaultPodOptionsSecurityContextSeLinuxOptions, optional
        The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seccompProfile : ValuesDefaultPodOptionsSecurityContextSeccompProfile, optional
        The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.
    supplementalGroups : [int], optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.
    sysctls : [ValuesDefaultPodOptionsSecurityContextSysctlsItems0], optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
    """

    fsGroup?: int
    fsGroupChangePolicy?: str
    runAsGroup?: int
    runAsNonRoot?: bool
    runAsUser?: int
    seLinuxOptions?: ValuesDefaultPodOptionsSecurityContextSeLinuxOptions
    seccompProfile?: ValuesDefaultPodOptionsSecurityContextSeccompProfile
    supplementalGroups?: [int]
    sysctls?: [ValuesDefaultPodOptionsSecurityContextSysctlsItems0]

schema ValuesDefaultPodOptionsSecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, optional
        Level is SELinux level label that applies to the container.
    role : str, optional
        Role is a SELinux role label that applies to the container.
    $type : str, optional
        Type is a SELinux type label that applies to the container.
    user : str, optional
        User is a SELinux user label that applies to the container.
    """

    level?: str
    role?: str
    $type?: str
    user?: str

schema ValuesDefaultPodOptionsSecurityContextSeccompProfile:
    r"""
    The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, optional
        type indicates which kind of seccomp profile will be applied. Valid options are:

        Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """

    localhostProfile?: str
    $type?: str

schema ValuesDefaultPodOptionsSecurityContextSysctlsItems0:
    r"""
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, optional
        Name of a property to set
    value : str, optional
        Value of a property to set
    """

    name?: str
    value?: str

schema ValuesDefaultPodOptionsTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """

    effect?: str
    key?: str
    operator?: str
    tolerationSeconds?: int
    value?: str

schema ValuesDefaultPodOptionsTopologySpreadConstraintsItems0:
    r"""
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelector, optional
        LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
    matchLabelKeys : [str], optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.

        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, optional
        MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, optional
        MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.

        This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
    nodeAffinityPolicy : str, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

        If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    nodeTaintsPolicy : str, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.

        If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    topologyKey : str, optional
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology. And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology. It's a required field.
    whenUnsatisfiable : str, optional
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,
          but giving higher precedence to topologies that would help reduce the
          skew.
        A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """

    labelSelector?: ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelector
    matchLabelKeys?: [str]
    maxSkew?: int
    minDomains?: int
    nodeAffinityPolicy?: str
    nodeTaintsPolicy?: str
    topologyKey?: str
    whenUnsatisfiable?: str

schema ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelector:
    r"""
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelectorMatchLabels

schema ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesDefaultPodOptionsTopologySpreadConstraintsItems0LabelSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesGlobal:
    r"""
    ValuesGlobal

    Attributes
    ----------
    annotations : any, optional
    fullnameOverride : str, optional
    labels : any, optional
    nameOverride : str, optional
    propagateGlobalMetadataToPods : bool, optional, default is False
    """

    annotations?: any
    fullnameOverride?: str
    labels?: any
    nameOverride?: str
    propagateGlobalMetadataToPods?: bool

schema ValuesIngressAdditionalProperties:
    r"""
    ValuesIngressAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    className : str, optional
    defaultBackend : ValuesIngressAdditionalPropertiesDefaultBackend, optional
        IngressBackend describes all endpoints for a given service and port.
    enabled : bool, optional, default is True
    hosts : [ValuesIngressAdditionalPropertiesHostsItems0], optional
    labels : any, optional
    nameOverride : str, optional
    tls : [ValuesIngressAdditionalPropertiesTlsItems0], optional
    """

    annotations?: any
    className?: str
    defaultBackend?: ValuesIngressAdditionalPropertiesDefaultBackend
    enabled?: bool
    hosts?: [ValuesIngressAdditionalPropertiesHostsItems0]
    labels?: any
    nameOverride?: str
    tls?: [ValuesIngressAdditionalPropertiesTlsItems0]

schema ValuesIngressAdditionalPropertiesDefaultBackend:
    r"""
    IngressBackend describes all endpoints for a given service and port.

    Attributes
    ----------
    resource : ValuesIngressAdditionalPropertiesDefaultBackendResource, optional
        resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".
    service : ValuesIngressAdditionalPropertiesDefaultBackendService, optional
        service references a service as a backend. This is a mutually exclusive setting with "Resource".
    """

    resource?: ValuesIngressAdditionalPropertiesDefaultBackendResource
    service?: ValuesIngressAdditionalPropertiesDefaultBackendService

schema ValuesIngressAdditionalPropertiesDefaultBackendResource:
    r"""
    resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".

    Attributes
    ----------
    apiGroup : str, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, optional
        Kind is the type of resource being referenced
    name : str, optional
        Name is the name of resource being referenced
    """

    apiGroup?: str
    kind?: str
    name?: str

schema ValuesIngressAdditionalPropertiesDefaultBackendService:
    r"""
    service references a service as a backend. This is a mutually exclusive setting with "Resource".

    Attributes
    ----------
    name : str, optional
        name is the referenced service. The service must exist in the same namespace as the Ingress object.
    port : ValuesIngressAdditionalPropertiesDefaultBackendServicePort, optional
        port of the referenced service. A port name or port number is required for a IngressServiceBackend.
    """

    name?: str
    port?: ValuesIngressAdditionalPropertiesDefaultBackendServicePort

schema ValuesIngressAdditionalPropertiesDefaultBackendServicePort:
    r"""
    port of the referenced service. A port name or port number is required for a IngressServiceBackend.

    Attributes
    ----------
    name : str, optional
        name is the name of the port on the Service. This is a mutually exclusive setting with "Number".
    number : int, optional
        number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".
    """

    name?: str
    number?: int

schema ValuesIngressAdditionalPropertiesHostsItems0:
    r"""
    ValuesIngressAdditionalPropertiesHostsItems0

    Attributes
    ----------
    host : str, optional
    paths : [ValuesIngressAdditionalPropertiesHostsItems0PathsItems0], optional
    """

    host?: str
    paths?: [ValuesIngressAdditionalPropertiesHostsItems0PathsItems0]

schema ValuesIngressAdditionalPropertiesHostsItems0PathsItems0:
    r"""
    ValuesIngressAdditionalPropertiesHostsItems0PathsItems0

    Attributes
    ----------
    path : str, optional
    pathType : str, optional, default is "Prefix"
    service : ValuesIngressAdditionalPropertiesHostsItems0PathsItems0Service, optional
    """

    path?: str
    pathType?: str
    service?: ValuesIngressAdditionalPropertiesHostsItems0PathsItems0Service

schema ValuesIngressAdditionalPropertiesHostsItems0PathsItems0Service:
    r"""
    ValuesIngressAdditionalPropertiesHostsItems0PathsItems0Service

    Attributes
    ----------
    identifier : str, optional
    name : str, optional
    port : str | int, optional
    """

    identifier?: str
    name?: str
    port?: str | int

schema ValuesIngressAdditionalPropertiesTlsItems0:
    r"""
    ValuesIngressAdditionalPropertiesTlsItems0

    Attributes
    ----------
    hosts : [str], optional
    secretName : str, optional
    """

    hosts?: [str]
    secretName?: str

schema ValuesNetworkpoliciesAdditionalProperties:
    r"""
    ValuesNetworkpoliciesAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    controller : str, optional
    enabled : bool, optional, default is True
    labels : any, optional
    nameOverride : str, optional
    podSelector : any, optional
    policyTypes : [str], optional
    rules : ValuesNetworkpoliciesAdditionalPropertiesRules, optional
    """

    annotations?: any
    controller?: str
    enabled?: bool
    labels?: any
    nameOverride?: str
    podSelector?: any
    policyTypes?: [str]
    rules?: ValuesNetworkpoliciesAdditionalPropertiesRules

schema ValuesNetworkpoliciesAdditionalPropertiesRules:
    r"""
    ValuesNetworkpoliciesAdditionalPropertiesRules

    Attributes
    ----------
    egress : [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0], optional
    ingress : [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0], optional
    """

    egress?: [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0]
    ingress?: [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0:
    r"""
    NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8

    Attributes
    ----------
    ports : [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0PortsItems0], optional
        ports is a list of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
    to : [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0], optional
        to is a list of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
    """

    ports?: [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0PortsItems0]
    to?: [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0PortsItems0:
    r"""
    NetworkPolicyPort describes a port to allow traffic on

    Attributes
    ----------
    endPort : int, optional
        endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.
    port : str | int, optional
        port represents the port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.
    $protocol : str, optional
        protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
    """

    endPort?: int
    port?: str | int
    $protocol?: str

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0:
    r"""
    NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed

    Attributes
    ----------
    ipBlock : ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0IpBlock, optional
        ipBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
    namespaceSelector : ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelector, optional
        namespaceSelector selects namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.

        If podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector.
    podSelector : ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelector, optional
        podSelector is a label selector which selects pods. This field follows standard label selector semantics; if present but empty, it selects all pods.

        If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace.
    """

    ipBlock?: ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0IpBlock
    namespaceSelector?: ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelector
    podSelector?: ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelector

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0IpBlock:
    r"""
    ipBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.

    Attributes
    ----------
    cidr : str, optional
        cidr is a string representing the IPBlock Valid examples are "192.168.1.0/24" or "2001:db8::/64"
    except : [str], optional
        except is a slice of CIDRs that should not be included within an IPBlock Valid examples are "192.168.1.0/24" or "2001:db8::/64" Except values will be rejected if they are outside the cidr range
    """

    cidr?: str
    except?: [str]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelector:
    r"""
    namespaceSelector selects namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.

    If podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector.

    Attributes
    ----------
    matchExpressions : [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelectorMatchLabels

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0NamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelector:
    r"""
    podSelector is a label selector which selects pods. This field follows standard label selector semantics; if present but empty, it selects all pods.

    If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace.

    Attributes
    ----------
    matchExpressions : [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelectorMatchExpressionsItems0]
    matchLabels?: ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelectorMatchLabels

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesEgressItems0ToItems0PodSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0:
    r"""
    NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.

    Attributes
    ----------
    from : [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0], optional
        from is a list of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
    ports : [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0PortsItems0], optional
        ports is a list of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
    """

    from?: [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0]
    ports?: [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0PortsItems0]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0:
    r"""
    NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed

    Attributes
    ----------
    ipBlock : ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0IpBlock, optional
        ipBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.
    namespaceSelector : ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelector, optional
        namespaceSelector selects namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.

        If podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector.
    podSelector : ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelector, optional
        podSelector is a label selector which selects pods. This field follows standard label selector semantics; if present but empty, it selects all pods.

        If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace.
    """

    ipBlock?: ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0IpBlock
    namespaceSelector?: ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelector
    podSelector?: ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelector

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0IpBlock:
    r"""
    ipBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.

    Attributes
    ----------
    cidr : str, optional
        cidr is a string representing the IPBlock Valid examples are "192.168.1.0/24" or "2001:db8::/64"
    except : [str], optional
        except is a slice of CIDRs that should not be included within an IPBlock Valid examples are "192.168.1.0/24" or "2001:db8::/64" Except values will be rejected if they are outside the cidr range
    """

    cidr?: str
    except?: [str]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelector:
    r"""
    namespaceSelector selects namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.

    If podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector.

    Attributes
    ----------
    matchExpressions : [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelectorMatchLabels

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0NamespaceSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelector:
    r"""
    podSelector is a label selector which selects pods. This field follows standard label selector semantics; if present but empty, it selects all pods.

    If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace.

    Attributes
    ----------
    matchExpressions : [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelectorMatchExpressionsItems0], optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelectorMatchLabels, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelectorMatchExpressionsItems0]
    matchLabels?: ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelectorMatchLabels

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, optional
        key is the label key that the selector applies to.
    operator : str, optional
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0FromItems0PodSelectorMatchLabels:
    r"""
    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    [...str]: str

schema ValuesNetworkpoliciesAdditionalPropertiesRulesIngressItems0PortsItems0:
    r"""
    NetworkPolicyPort describes a port to allow traffic on

    Attributes
    ----------
    endPort : int, optional
        endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.
    port : str | int, optional
        port represents the port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.
    $protocol : str, optional
        protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
    """

    endPort?: int
    port?: str | int
    $protocol?: str

schema ValuesPersistenceAdditionalProperties:
    r"""
    ValuesPersistenceAdditionalProperties

    Attributes
    ----------
    accessMode : str, optional
    advancedMounts : any, optional
    annotations : any, optional
    dataSource : ValuesPersistenceAdditionalPropertiesDataSource, optional
    dataSourceRef : ValuesPersistenceAdditionalPropertiesDataSourceRef, optional
    defaultMode : int, optional
    enabled : bool, optional, default is True
    existingClaim : str, optional
    globalMounts : [ValuesPersistenceAdditionalPropertiesGlobalMountsItems0], optional
    hostPath : str, optional
    hostPathType : str, optional
    identifier : str, optional
    items : [ValuesPersistenceAdditionalPropertiesItemsItems0], optional
    labels : any, optional
    medium : str, optional
    name : str, optional
    nameOverride : str, optional
    path : str, optional
    retain : bool, optional
    server : str, optional
    size : str, optional
    sizeLimit : str, optional
    storageClass : str, optional
    $type : any, optional
    volumeName : str, optional
    volumeSpec : ValuesPersistenceAdditionalPropertiesVolumeSpec, optional
    """

    accessMode?: str
    advancedMounts?: any
    annotations?: any
    dataSource?: ValuesPersistenceAdditionalPropertiesDataSource
    dataSourceRef?: ValuesPersistenceAdditionalPropertiesDataSourceRef
    defaultMode?: int
    enabled?: bool
    existingClaim?: str
    globalMounts?: [ValuesPersistenceAdditionalPropertiesGlobalMountsItems0]
    hostPath?: str
    hostPathType?: str
    identifier?: str
    items?: [ValuesPersistenceAdditionalPropertiesItemsItems0]
    labels?: any
    medium?: str
    name?: str
    nameOverride?: str
    path?: str
    retain?: bool
    server?: str
    size?: str
    sizeLimit?: str
    storageClass?: str
    $type?: any
    volumeName?: str
    volumeSpec?: ValuesPersistenceAdditionalPropertiesVolumeSpec

schema ValuesPersistenceAdditionalPropertiesAdvancedMountsAdditionalProperties:
    r"""
    ValuesPersistenceAdditionalPropertiesAdvancedMountsAdditionalProperties
    """

    [...str]: [ValuesPersistenceAdditionalPropertiesAdvancedMountsAdditionalPropertiesAdditionalPropertiesItems0]

schema ValuesPersistenceAdditionalPropertiesAdvancedMountsAdditionalPropertiesAdditionalPropertiesItems0:
    r"""
    ValuesPersistenceAdditionalPropertiesAdvancedMountsAdditionalPropertiesAdditionalPropertiesItems0

    Attributes
    ----------
    mountPropagation : str, optional
    path : str, optional
    readOnly : bool, optional
    subPath : str, optional
    """

    mountPropagation?: str
    path?: str
    readOnly?: bool
    subPath?: str

schema ValuesPersistenceAdditionalPropertiesDataSource:
    r"""
    ValuesPersistenceAdditionalPropertiesDataSource

    Attributes
    ----------
    apiGroup : str, optional
    kind : str, optional
    name : str, optional
    """

    apiGroup?: str
    kind?: str
    name?: str

schema ValuesPersistenceAdditionalPropertiesDataSourceRef:
    r"""
    ValuesPersistenceAdditionalPropertiesDataSourceRef

    Attributes
    ----------
    apiGroup : str, optional
    kind : str, optional
    name : str, optional
    """

    apiGroup?: str
    kind?: str
    name?: str

schema ValuesPersistenceAdditionalPropertiesGlobalMountsItems0:
    r"""
    ValuesPersistenceAdditionalPropertiesGlobalMountsItems0

    Attributes
    ----------
    mountPropagation : str, optional
    path : str, optional
    readOnly : bool, optional
    subPath : str, optional
    """

    mountPropagation?: str
    path?: str
    readOnly?: bool
    subPath?: str

schema ValuesPersistenceAdditionalPropertiesItemsItems0:
    r"""
    ValuesPersistenceAdditionalPropertiesItemsItems0

    Attributes
    ----------
    key : str, optional
    mode : int, optional
    path : str, optional
    """

    key?: str
    mode?: int
    path?: str

schema ValuesPersistenceAdditionalPropertiesVolumeSpec:
    r"""
    ValuesPersistenceAdditionalPropertiesVolumeSpec
    """

    [...str]: any

schema ValuesRawResourcesAdditionalProperties:
    r"""
    ValuesRawResourcesAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    apiVersion : str, optional
    enabled : bool, optional, default is True
    forceRename : str, optional
    kind : str, optional
    labels : any, optional
    nameOverride : str, optional
    spec : any, optional
    """

    annotations?: any
    apiVersion?: str
    enabled?: bool
    forceRename?: str
    kind?: str
    labels?: any
    nameOverride?: str
    spec?: any

schema ValuesRouteAdditionalProperties:
    r"""
    ValuesRouteAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    enabled : bool, optional, default is True
    hostnames : [str], optional
    kind : "GRPCRoute" | "HTTPRoute" | "TCPRoute" | "TLSRoute" | "UDPRoute", optional
    labels : any, optional
    nameOverride : str, optional
    parentRefs : [ValuesRouteAdditionalPropertiesParentRefsItems0], optional
    rules : [ValuesRouteAdditionalPropertiesRulesItems0], optional
    """

    annotations?: any
    enabled?: bool
    hostnames?: [str]
    kind?: "GRPCRoute" | "HTTPRoute" | "TCPRoute" | "TLSRoute" | "UDPRoute"
    labels?: any
    nameOverride?: str
    parentRefs?: [ValuesRouteAdditionalPropertiesParentRefsItems0]
    rules?: [ValuesRouteAdditionalPropertiesRulesItems0]

schema ValuesRouteAdditionalPropertiesParentRefsItems0:
    r"""
    ValuesRouteAdditionalPropertiesParentRefsItems0

    Attributes
    ----------
    group : str, optional
    kind : str, optional
    name : str, optional
    namespace : str, optional
    sectionName : str, optional
    """

    group?: str
    kind?: str
    name?: str
    namespace?: str
    sectionName?: str

schema ValuesRouteAdditionalPropertiesRulesItems0:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0

    Attributes
    ----------
    backendRefs : [ValuesRouteAdditionalPropertiesRulesItems0BackendRefsItems0], optional
    filters : [any], optional
    matches : [ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0], optional
    timeouts : ValuesRouteAdditionalPropertiesRulesItems0Timeouts, optional
    """

    backendRefs?: [ValuesRouteAdditionalPropertiesRulesItems0BackendRefsItems0]
    filters?: [any]
    matches?: [ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0]
    timeouts?: ValuesRouteAdditionalPropertiesRulesItems0Timeouts

schema ValuesRouteAdditionalPropertiesRulesItems0BackendRefsItems0:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0BackendRefsItems0

    Attributes
    ----------
    group : str, optional
    kind : str, optional
    name : str, optional
    namespace : str, optional
    port : str | int, optional
    weight : int, optional
    """

    group?: str
    kind?: str
    name?: str
    namespace?: str
    port?: str | int
    weight?: int

schema ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0

    Attributes
    ----------
    path : ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0Path, optional
    """

    path?: ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0Path

schema ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0Path:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0MatchesItems0Path

    Attributes
    ----------
    $type : str, optional
    value : str, optional
    """

    $type?: str
    value?: str

schema ValuesRouteAdditionalPropertiesRulesItems0Timeouts:
    r"""
    ValuesRouteAdditionalPropertiesRulesItems0Timeouts
    """

    [...str]: any

schema ValuesSecretsAdditionalProperties:
    r"""
    ValuesSecretsAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    enabled : bool, optional, default is True
    includeInChecksum : bool, optional, default is True
    labels : any, optional
    nameOverride : str, optional
    stringData : ValuesSecretsAdditionalPropertiesStringData, optional
    $type : str, optional
    """

    annotations?: any
    enabled?: bool
    includeInChecksum?: bool
    labels?: any
    nameOverride?: str
    stringData?: ValuesSecretsAdditionalPropertiesStringData
    $type?: str

schema ValuesSecretsAdditionalPropertiesStringData:
    r"""
    ValuesSecretsAdditionalPropertiesStringData
    """

    [...str]: str

schema ValuesServiceAccount:
    r"""
    ValuesServiceAccount

    Attributes
    ----------
    annotations : any, optional
    create : bool, optional, default is False
    extraServiceAccounts : ValuesServiceAccountExtraServiceAccounts, optional
    labels : any, optional
    name : str, optional
    """

    annotations?: any
    create?: bool
    extraServiceAccounts?: ValuesServiceAccountExtraServiceAccounts
    labels?: any
    name?: str

schema ValuesServiceAccountExtraServiceAccounts:
    r"""
    ValuesServiceAccountExtraServiceAccounts
    """

    [...str]: ValuesServiceAccountExtraServiceAccountsAdditionalProperties

schema ValuesServiceAccountExtraServiceAccountsAdditionalProperties:
    r"""
    ValuesServiceAccountExtraServiceAccountsAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    create : bool, optional, default is False
    labels : any, optional
    name : str, optional
    """

    annotations?: any
    create?: bool
    labels?: any
    name?: str

schema ValuesServiceAdditionalProperties:
    r"""
    ValuesServiceAdditionalProperties

    Attributes
    ----------
    allocateLoadBalancerNodePorts : bool, optional
    annotations : any, optional
    clusterIP : str, optional
    controller : str, optional
    enabled : bool, optional, default is True
    externalIPs : [str], optional
    externalName : str, optional
    externalTrafficPolicy : "Cluster" | "Local", optional
    extraSelectorLabels : any, optional
    internalTrafficPolicy : "Cluster" | "Local", optional
    ipFamilies : ["IPv4" | "IPv6"], optional
    ipFamilyPolicy : "SingleStack" | "PreferDualStack" | "RequireDualStack", optional
    labels : any, optional
    loadBalancerClass : str, optional
    loadBalancerIP : str, optional
    loadBalancerSourceRanges : [str], optional
    nameOverride : str, optional
    ports : ValuesServiceAdditionalPropertiesPorts, optional
    primary : bool, optional, default is False
    publishNotReadyAddresses : bool, optional
    sessionAffinity : "None" | "ClientIP", optional
    sessionAffinityConfig : ValuesServiceAdditionalPropertiesSessionAffinityConfig, optional
    $type : str, optional
    """

    allocateLoadBalancerNodePorts?: bool
    annotations?: any
    clusterIP?: str
    controller?: str
    enabled?: bool
    externalIPs?: [str]
    externalName?: str
    externalTrafficPolicy?: "Cluster" | "Local"
    extraSelectorLabels?: any
    internalTrafficPolicy?: "Cluster" | "Local"
    ipFamilies?: ["IPv4" | "IPv6"]
    ipFamilyPolicy?: "SingleStack" | "PreferDualStack" | "RequireDualStack"
    labels?: any
    loadBalancerClass?: str
    loadBalancerIP?: str
    loadBalancerSourceRanges?: [str]
    nameOverride?: str
    ports?: ValuesServiceAdditionalPropertiesPorts
    primary?: bool
    publishNotReadyAddresses?: bool
    sessionAffinity?: "None" | "ClientIP"
    sessionAffinityConfig?: ValuesServiceAdditionalPropertiesSessionAffinityConfig
    $type?: str

schema ValuesServiceAdditionalPropertiesPorts:
    r"""
    ValuesServiceAdditionalPropertiesPorts
    """

    [...str]: ValuesServiceAdditionalPropertiesPortsAdditionalProperties

schema ValuesServiceAdditionalPropertiesPortsAdditionalProperties:
    r"""
    ValuesServiceAdditionalPropertiesPortsAdditionalProperties

    Attributes
    ----------
    appProtocol : str, optional
    enabled : bool, optional, default is True
    nodePort : str | int, optional
    port : str | int, optional
    primary : bool, optional, default is False
    $protocol : "HTTP" | "HTTPS" | "TCP" | "UDP", optional
    targetPort : str | int, optional
    """

    appProtocol?: str
    enabled?: bool
    nodePort?: str | int
    port?: str | int
    primary?: bool
    $protocol?: "HTTP" | "HTTPS" | "TCP" | "UDP"
    targetPort?: str | int

schema ValuesServiceAdditionalPropertiesSessionAffinityConfig:
    r"""
    ValuesServiceAdditionalPropertiesSessionAffinityConfig
    """

    [...str]: any

schema ValuesServiceMonitorAdditionalProperties:
    r"""
    ValuesServiceMonitorAdditionalProperties

    Attributes
    ----------
    annotations : any, optional
    enabled : bool, optional, default is True
    endpoints : [ValuesServiceMonitorAdditionalPropertiesEndpointsItems0], optional
    labels : any, optional
    nameOverride : str, optional
    selector : ValuesServiceMonitorAdditionalPropertiesSelector, optional
    serviceName : str, optional
    targetLabels : any, optional
    """

    annotations?: any
    enabled?: bool
    endpoints?: [ValuesServiceMonitorAdditionalPropertiesEndpointsItems0]
    labels?: any
    nameOverride?: str
    selector?: ValuesServiceMonitorAdditionalPropertiesSelector
    serviceName?: str
    targetLabels?: any

schema ValuesServiceMonitorAdditionalPropertiesEndpointsItems0:
    r"""
    ValuesServiceMonitorAdditionalPropertiesEndpointsItems0
    """

    [...str]: any

schema ValuesServiceMonitorAdditionalPropertiesSelector:
    r"""
    ValuesServiceMonitorAdditionalPropertiesSelector

    Attributes
    ----------
    matchExpressions : [ValuesServiceMonitorAdditionalPropertiesSelectorMatchExpressionsItems0], optional
    matchLabels : ValuesServiceMonitorAdditionalPropertiesSelectorMatchLabels, optional
    """

    matchExpressions?: [ValuesServiceMonitorAdditionalPropertiesSelectorMatchExpressionsItems0]
    matchLabels?: ValuesServiceMonitorAdditionalPropertiesSelectorMatchLabels

schema ValuesServiceMonitorAdditionalPropertiesSelectorMatchExpressionsItems0:
    r"""
    ValuesServiceMonitorAdditionalPropertiesSelectorMatchExpressionsItems0

    Attributes
    ----------
    key : str, optional
    operator : str, optional
    values : [str], optional
    """

    key?: str
    operator?: str
    values?: [str]

schema ValuesServiceMonitorAdditionalPropertiesSelectorMatchLabels:
    r"""
    ValuesServiceMonitorAdditionalPropertiesSelectorMatchLabels
    """

    [...str]: str

